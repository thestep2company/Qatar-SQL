{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "name": "Production",
    "culture": "en-US",
    "discourageImplicitMeasures": true,
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/ ;Operations",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "qatar",
            "compatibilityLevel": 1500,
            "database": "Operations"
          },
          "authentication": null,
          "query": null
        },
        "options": {
          "commandTimeout": "1200"
        },
        "credential": {
          "AuthenticationKind": "ServiceAccount",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "Product",
        "columns": [
          {
            "name": "Product Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ProductSort",
            "displayFolder": "Hidden"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID",
            "displayFolder": "Hidden"
          },
          {
            "name": "SKU",
            "dataType": "string",
            "sourceColumn": "ProductKey",
            "sortByColumn": "Product Sort"
          },
          {
            "name": "SKU Name",
            "dataType": "string",
            "sourceColumn": "ProductName"
          },
          {
            "name": "SKU: Name",
            "dataType": "string",
            "sourceColumn": "ProductDesc",
            "sortByColumn": "Product Sort"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "Item Type",
            "dataType": "string",
            "sourceColumn": "Item Type"
          },
          {
            "name": "Category_Old",
            "dataType": "string",
            "sourceColumn": "Category"
          },
          {
            "name": "Sub Category_Old",
            "dataType": "string",
            "sourceColumn": "SubCategory"
          },
          {
            "name": "Brand_Old",
            "dataType": "string",
            "sourceColumn": "Brand"
          },
          {
            "name": "Inventory Status Code",
            "dataType": "string",
            "sourceColumn": "Inventory Status Code"
          },
          {
            "name": "Country of Origin",
            "dataType": "string",
            "sourceColumn": "Country of Origin"
          },
          {
            "name": "Part Class",
            "dataType": "string",
            "sourceColumn": "Part Class"
          },
          {
            "name": "SIOP Family_Old",
            "dataType": "string",
            "sourceColumn": "SIOP Family"
          },
          {
            "name": "Contract Manufacturing",
            "dataType": "string",
            "sourceColumn": "Contract Manufacturing"
          },
          {
            "name": "4 Digit",
            "dataType": "string",
            "sourceColumn": "4 Digit"
          },
          {
            "name": "Category Type",
            "dataType": "string",
            "sourceColumn": "CategoryType"
          },
          {
            "name": "Make Buy",
            "dataType": "string",
            "sourceColumn": "MakeBuy"
          },
          {
            "name": "Channel",
            "dataType": "string",
            "sourceColumn": "Channel"
          },
          {
            "name": "Part Type",
            "dataType": "string",
            "sourceColumn": "Part Type"
          },
          {
            "name": "IMAP",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "IMAP",
            "displayFolder": "Hidden"
          },
          {
            "name": "NPD",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NPD",
            "displayFolder": "Hidden"
          },
          {
            "name": "List Price",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "List Price",
            "displayFolder": "Hidden"
          },
          {
            "name": "Royalty License Name",
            "dataType": "string",
            "sourceColumn": "Royalty License Name"
          },
          {
            "name": "Shipping Method",
            "dataType": "string",
            "sourceColumn": "Shipping Method"
          },
          {
            "name": "$Product Volume",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Product Volume"
          },
          {
            "name": "Cooler Size",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Cooler Size",
            "displayFolder": "Hidden"
          },
          {
            "name": "First Production Date",
            "dataType": "dateTime",
            "sourceColumn": "FirstProductionDate",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Last Production Date",
            "dataType": "dateTime",
            "sourceColumn": "LastProductionDate",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "First Sale Date",
            "dataType": "dateTime",
            "sourceColumn": "FirstSaleDate",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Last Sale Date",
            "dataType": "dateTime",
            "sourceColumn": "LastSaleDate",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Product Group",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ProductGroup",
            "displayFolder": "Hidden"
          },
          {
            "name": "Product Line",
            "dataType": "string",
            "sourceColumn": "ProductLine"
          },
          {
            "name": "Department",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Department",
            "displayFolder": "Hidden"
          },
          {
            "name": "Dimensions",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Dimensions",
            "displayFolder": "Hidden"
          },
          {
            "name": "Footprint",
            "dataType": "double",
            "sourceColumn": "Footprint"
          },
          {
            "name": "Cube",
            "dataType": "double",
            "sourceColumn": "Cube"
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size"
          },
          {
            "name": "Step2 Custom",
            "dataType": "string",
            "sourceColumn": "Step2 Custom"
          },
          {
            "name": "Creation Date",
            "dataType": "dateTime",
            "sourceColumn": "CreationDate"
          },
          {
            "name": "Child Adult",
            "dataType": "string",
            "sourceColumn": "ChildAdult"
          },
          {
            "name": "DerivedProductKey",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DerivedProductKey",
            "displayFolder": "Hidden"
          },
          {
            "name": "PlaceholderName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PlaceholderName",
            "displayFolder": "Hidden"
          },
          {
            "name": "PlaceholderDesc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PlaceholderDesc",
            "displayFolder": "Hidden"
          },
          {
            "name": "PlaceholderType",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PlaceholderType",
            "displayFolder": "Hidden"
          },
          {
            "name": "Forecast Segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Forecast Segment",
            "displayFolder": "Hidden"
          },
          {
            "name": "UPC",
            "dataType": "string",
            "sourceColumn": "UPC"
          },
          {
            "name": "4 Digit SKU",
            "dataType": "string",
            "sourceColumn": "4 Digit SKU"
          },
          {
            "name": "Product Status",
            "dataType": "string",
            "sourceColumn": "ProductStatus"
          },
          {
            "name": "Vendor Name",
            "dataType": "string",
            "sourceColumn": "VENDOR_NAME"
          },
          {
            "name": "Vendor Name Alternate",
            "dataType": "string",
            "sourceColumn": "VENDOR_NAME_ALTERNATE"
          },
          {
            "name": "Planner Code",
            "dataType": "string",
            "sourceColumn": "PLANNER_CODE"
          },
          {
            "name": "Buyer Name",
            "dataType": "string",
            "sourceColumn": "BUYER_NAME"
          },
          {
            "name": "Product Name Consolidated",
            "dataType": "string",
            "sourceColumn": "Product Name Consolidated"
          },
          {
            "name": "Visible",
            "dataType": "boolean",
            "sourceColumn": "Visible"
          },
          {
            "name": "HasSCP",
            "dataType": "boolean",
            "isHidden": true,
            "sourceColumn": "HasSCP",
            "displayFolder": "Hidden"
          },
          {
            "name": "HasInventory",
            "dataType": "boolean",
            "isHidden": true,
            "sourceColumn": "HasInventory",
            "displayFolder": "Hidden"
          },
          {
            "name": "Supercategory",
            "dataType": "string",
            "sourceColumn": "Supercategory_NEW"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category_NEW"
          },
          {
            "name": "Sub Category",
            "dataType": "string",
            "sourceColumn": "Sub-Category_NEW"
          },
          {
            "name": "Product Type",
            "dataType": "string",
            "sourceColumn": "ProductType_NEW"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand_NEW"
          },
          {
            "name": "License",
            "dataType": "string",
            "sourceColumn": "License"
          },
          {
            "name": "Product Family",
            "dataType": "string",
            "sourceColumn": "Product Family"
          },
          {
            "name": "US Exclusive",
            "dataType": "string",
            "sourceColumn": "US Exclusive"
          },
          {
            "name": "ABCD Code",
            "dataType": "string",
            "sourceColumn": "ABCD Code"
          },
          {
            "name": "Safety Stock Variability",
            "dataType": "string",
            "sourceColumn": "Safety Stock Variability"
          },
          {
            "name": "Assembled Weight",
            "dataType": "string",
            "sourceColumn": "Weight_Assembled"
          },
          {
            "name": "Assembled Volume",
            "dataType": "string",
            "sourceColumn": "Volume_Assembled"
          },
          {
            "name": "Assembled Length",
            "dataType": "string",
            "sourceColumn": "Length_Assembled"
          },
          {
            "name": "Assembled Width",
            "dataType": "string",
            "sourceColumn": "Width_Assembled"
          },
          {
            "name": "Assembled Height",
            "dataType": "string",
            "sourceColumn": "Height_Assembled"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_ProductMaster = Source{[Schema=\"dbo\",Item=\"DimProductMaster\"]}[Data]",
                "in",
                "    Dim_ProductMaster"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Product Volume $",
            "expression": "MAX([$Product Volume])",
            "formatString": "#,0.0000",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Machine",
        "columns": [
          {
            "name": "Machine ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "Machine Key",
            "dataType": "string",
            "sourceColumn": "MachineKey",
            "sortByColumn": "Machine Sort"
          },
          {
            "name": "Machine Name",
            "dataType": "string",
            "sourceColumn": "MachineName",
            "sortByColumn": "Machine Sort"
          },
          {
            "name": "Machine Desc",
            "dataType": "string",
            "sourceColumn": "MachineDesc"
          },
          {
            "name": "Machine Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MachineSort"
          },
          {
            "name": "Machine Number",
            "dataType": "string",
            "sourceColumn": "MachineNumber"
          },
          {
            "name": "Machine Size",
            "dataType": "string",
            "sourceColumn": "MachineModel"
          },
          {
            "name": "Machine Cell",
            "dataType": "int64",
            "sourceColumn": "MachineCell"
          },
          {
            "name": "Cell Position",
            "dataType": "int64",
            "sourceColumn": "CellPosition"
          },
          {
            "name": "$RoundsPerShift",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "RoundsPerShift"
          },
          {
            "name": "$CapacityRoundsPerShift",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CapacityRoundsPerShift"
          },
          {
            "name": "Location Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LocationKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Machine = Source{[Schema=\"dbo\",Item=\"DimMachine\"]}[Data]",
                "in",
                "    Dim_Machine"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Rounds Per Machine",
            "expression": "MAX([$RoundsPerShift])",
            "formatString": "0"
          },
          {
            "name": "Capacity Rounds Per Machine",
            "expression": "SUM([$CapacityRoundsPerShift])",
            "formatString": "0"
          }
        ]
      },
      {
        "name": "Production",
        "defaultDetailRowsDefinition": {
          "expression": [
            "SELECTCOLUMNS('Production'",
            "    ,\"Plant Name\",RELATED('Location'[Location: Name])",
            "    ,\"Shift Name\",RELATED('Shift'[Shift Name])    ",
            "    ,\"Machine Name\",RELATED('Machine'[Machine Name])",
            "    ,\"Product Desc\",RELATED('Product'[SKU: Name])",
            "    ,\"Production Qty\",'Production'[$Production Qty]",
            "    ,\"Production $\",'Production'[$Total Dollars]",
            ")"
          ]
        },
        "columns": [
          {
            "name": "PlantID",
            "dataType": "int64",
            "sourceColumn": "PlantID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "sourceColumn": "ShiftID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "sourceColumn": "MachineID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "sourceColumn": "ProductID"
          },
          {
            "name": "$Production Qty",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Production Qty"
          },
          {
            "name": "$List Less 7 %",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "List Less 7 %"
          },
          {
            "name": "$Total Dollars",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Dollars"
          },
          {
            "name": "$Required Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Required Hours"
          },
          {
            "name": "$FG Resign Weight",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "FG Resign Weight"
          },
          {
            "name": "$FG Total Resin",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "FG Total Resin"
          },
          {
            "name": "$Unit Cube",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Unit Cube"
          },
          {
            "name": "$Total Cube",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Cube"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "sourceColumn": "DateID"
          },
          {
            "name": "$Total Machine Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Machine Hours"
          },
          {
            "name": "$Standard Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Standard Hours"
          },
          {
            "name": "$Total Standard Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Standard Hours"
          },
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "HourID",
            "dataType": "int64",
            "sourceColumn": "HourID"
          },
          {
            "name": "$Machine Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Hours"
          },
          {
            "name": "ComponentID",
            "dataType": "int64",
            "sourceColumn": "ComponentID"
          },
          {
            "name": "$StandardCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Standard Cost"
          },
          {
            "name": "$ResourceCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Resource Cost",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "$MaterialCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Material Cost",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "$MaterialOverheadCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Material Overhead Cost",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "$OutsideProcessingCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Outside Processing Cost",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "sourceColumn": "CurrentShiftID"
          },
          {
            "name": "$OptimalMachineHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Optimal Machine Hours"
          },
          {
            "name": "$OptimalTotalMachineHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Optimal Total Machine Hours"
          },
          {
            "name": "$SpidersRan",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Ran"
          },
          {
            "name": "Total Spiders Ran",
            "dataType": "double",
            "sourceColumn": "Total Spiders Ran"
          },
          {
            "name": "$SpiderMix",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spider Mix"
          },
          {
            "name": "$EffectiveSpiders",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Effective Spiders"
          },
          {
            "name": "$ProductionGoal",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ProductionGoal"
          },
          {
            "name": "WorkDayID",
            "dataType": "int64",
            "sourceColumn": "WorkDayID"
          },
          {
            "name": "$RoundsPerShift",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "RoundsPerShift"
          },
          {
            "name": "$PieceCount",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Piece Count"
          },
          {
            "name": "$Machine Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Earned Hours"
          },
          {
            "name": "$Total Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Earned Hours"
          },
          {
            "name": "$Earned Overhead Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Earned Overhead Cost",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "$Total Roto Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Roto Earned Cost"
          },
          {
            "name": "$Assembly Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Earned Cost"
          },
          {
            "name": "$Assembly Lead Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Lead Earned Cost"
          },
          {
            "name": "$Total Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Earned Cost"
          },
          {
            "name": "$Machine Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Earned Cost"
          },
          {
            "name": "$Assembly Lead Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Lead Earned Hours"
          },
          {
            "name": "$Total Assembly Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Assembly Earned Hours"
          },
          {
            "name": "$Roto Oper Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Oper Earned Cost"
          },
          {
            "name": "$Roto Float Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Float Earned Cost"
          },
          {
            "name": "$Roto Oper Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Oper Earned Hours"
          },
          {
            "name": "$Roto Float Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Float Earned Hours"
          },
          {
            "name": "$Total Assembly Earned Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Assembly Earned Cost"
          },
          {
            "name": "$Total Roto Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Roto Earned Hours"
          },
          {
            "name": "$Assembly Earned Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Earned Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Production = Source{[Schema=\"dbo\",Item=\"FactProduction\"]}[Data]",
                "in",
                "    Fact_Production"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Production Qty",
            "expression": "SUM([$Production Qty])",
            "formatString": "#,0",
            "kpi": {
              "targetExpression": "'Calculated Measures'[Production Qty Goal]",
              "targetFormatString": "#,0",
              "statusGraphic": "Road Signs",
              "statusExpression": [
                "var x='Production'[Production Qty]/'Production'[_Production Qty Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.85,-1,",
                "\t                If(x<1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "85"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "100"
                }
              ]
            }
          },
          {
            "name": "List Less 7 %",
            "expression": "MAX([$List Less 7 %])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FG Resign Weight",
            "expression": "SUM([$FG Resign Weight])",
            "formatString": "#,0.00"
          },
          {
            "name": "FG Total Resin",
            "expression": "SUM([$FG Total Resin])",
            "formatString": "#,0.00"
          },
          {
            "name": "Production Cube",
            "expression": "SUM([$Total Cube])",
            "formatString": "#,0.00"
          },
          {
            "name": "Distinct Machine Count",
            "expression": "DISTINCTCOUNT([MachineID])",
            "formatString": "0.00",
            "kpi": {
              "targetExpression": "'Goal'[Machine Count Forecast]",
              "targetFormatString": "0.00",
              "statusGraphic": "Traffic Light - Single",
              "statusExpression": [
                "var x='Production'[Distinct Machine Count]/'Production'[_Distinct Machine Count Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.85,-1,",
                "\t                If(x<1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "85"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "100"
                }
              ]
            }
          },
          {
            "name": "Total Machine Hours",
            "expression": "SUM([$Total Machine Hours])",
            "formatString": "#,0.00"
          },
          {
            "name": "Average Machine Count",
            "expression": [
              " AVERAGEX ( ",
              "    SUMMARIZE ( ",
              "        Production, ",
              "        Production[DateID],",
              "        \"Average Machine Count\", DISTINCTCOUNT ( Production[MachineID] )",
              "    ),",
              "    [Average Machine Count]",
              ")"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Resource Hours",
            "expression": "SUM([$Required Hours])",
            "formatString": "#,0.00000"
          },
          {
            "name": "Total Standard Hours",
            "expression": "SUM([$Total Standard Hours])",
            "formatString": "#,0.00"
          },
          {
            "name": "Production $ (NSP)",
            "expression": "SUM([$Total Dollars])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "kpi": {
              "targetExpression": "'Goal'[Production $ Forecast (NSP)]",
              "targetFormatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
              "statusGraphic": "Traffic Light - Single",
              "statusExpression": [
                "var x='Production'[Production $ (NSP)]/'Production'[_Production $ (NSP) Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.85,-1,",
                "\t                If(x<1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "85"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "100"
                }
              ]
            },
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Cube Produced",
            "expression": "SUM([$Unit Cube])",
            "formatString": "#,0.00"
          },
          {
            "name": "Production $ (Cost)",
            "expression": "SUM([$StandardCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Optimal Machine Hours",
            "expression": "SUM([$OptimalMachineHours])",
            "formatString": "0.00"
          },
          {
            "name": "Optimal Total Machine Hours",
            "expression": "SUM([$OptimalTotalMachineHours])",
            "formatString": "0.00"
          },
          {
            "name": "Sum of PlantID",
            "expression": "SUM([PlantID])"
          },
          {
            "name": "Production Qty Goal",
            "expression": "SUM([$ProductionGoal])",
            "formatString": "#,0"
          },
          {
            "name": "Spider Mix",
            "expression": "SUM([$SpiderMix])"
          },
          {
            "name": "Work Day",
            "expression": " DISTINCTCOUNT([WorkDayID])"
          },
          {
            "name": "Shift Count",
            "expression": "DISTINCTCOUNT([CurrentShiftID])"
          },
          {
            "name": "Effective Spiders",
            "expression": "SUM([$EffectiveSpiders])"
          },
          {
            "name": "Rounds Packed",
            "expression": "SUM([$SpidersRan])",
            "formatString": "0.00"
          },
          {
            "name": "Rounds Per Shift",
            "expression": "MAX([$RoundsPerShift])",
            "formatString": "0"
          },
          {
            "name": "Pieces Produced",
            "expression": "SUM([$PieceCount])",
            "formatString": "#,0"
          },
          {
            "name": "Number of SKUs Ran",
            "expression": "DISTINCTCOUNT([ProductID])",
            "formatString": "#,0"
          },
          {
            "name": "Machine Earned Hours",
            "expression": "SUM([$Machine Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Total Earned Hours",
            "expression": "SUM([$Total Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Resource Cost",
            "expression": "SUM([$ResourceCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Earned Overhead Cost",
            "expression": "SUM([$Earned Overhead Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Material Cost",
            "expression": "SUM([$MaterialCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Material Overhead Cost",
            "expression": "SUM([$MaterialOverheadCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Outside Processing Cost",
            "expression": "SUM([$OutsideProcessingCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Standard Cost",
            "expression": "SUM([$StandardCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standard Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Assembly Earned Hours",
            "expression": "SUM([$Total Assembly Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Roto Float Earned Hours",
            "expression": "SUM([$Roto Float Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Roto Float Earned Cost",
            "expression": "SUM([$Roto Float Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Earned Cost",
            "expression": "SUM([$Machine Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Assembly Lead Earned Hours",
            "expression": "SUM([$Assembly Lead Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Assembly Lead Earned Cost",
            "expression": "SUM([$Assembly Lead Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Assembly Earned Cost",
            "expression": "SUM([$Assembly Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Roto Earned Cost",
            "expression": "SUM([$Total Roto Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Earned Cost",
            "expression": "SUM([$Total Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Roto Oper Earned Hours",
            "expression": "SUM([$Roto Oper Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Roto Oper Earned Cost",
            "expression": "SUM([$Roto Oper Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Assembly Earned Hours",
            "expression": "SUM([$Assembly Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          },
          {
            "name": "Total Assembly Earned Cost",
            "expression": "SUM([$Total Assembly Earned Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Earned\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Roto Earned Hours",
            "expression": "SUM([$Total Roto Earned Hours])",
            "formatString": "#,0.00",
            "displayFolder": "Earned\\Hours"
          }
        ]
      },
      {
        "name": "Shift",
        "columns": [
          {
            "name": "Shift ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "Shift Key",
            "dataType": "string",
            "sourceColumn": "ShiftKey",
            "sortByColumn": "Shift Sort"
          },
          {
            "name": "Shift Name",
            "dataType": "string",
            "sourceColumn": "ShiftName",
            "sortByColumn": "Shift Sort"
          },
          {
            "name": "Shift Desc",
            "dataType": "string",
            "sourceColumn": "ShiftDesc",
            "sortByColumn": "Shift Sort"
          },
          {
            "name": "Shift Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ShiftSort"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Shift = Source{[Schema=\"dbo\",Item=\"DimShift\"]}[Data]",
                "in",
                "    Dim_Shift"
              ]
            }
          }
        ]
      },
      {
        "name": "Fiscal Calendar",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter",
            "sortByColumn": "Quarter Sort"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month",
            "sortByColumn": "Month Sort"
          },
          {
            "name": "Week",
            "dataType": "string",
            "sourceColumn": "Week",
            "sortByColumn": "Week Sort"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "Day",
            "sortByColumn": "Day Sort"
          },
          {
            "name": "Week Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Week Sort"
          },
          {
            "name": "Date ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DateKey",
            "formatString": "yyyy-MM-dd",
            "sortByColumn": "Date ID",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Month Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Month Sort"
          },
          {
            "name": "Quarter Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Quarter Sort"
          },
          {
            "name": "Day Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Day Sort"
          },
          {
            "name": "Half",
            "dataType": "string",
            "sourceColumn": "Half"
          },
          {
            "name": "Half Seasonlity",
            "dataType": "string",
            "sourceColumn": "Half Seasonlity"
          },
          {
            "name": "Quarter Seasonality",
            "dataType": "string",
            "sourceColumn": "Quarter Seasonality"
          },
          {
            "name": "Month Seasonality",
            "dataType": "string",
            "sourceColumn": "Month Seasonality",
            "sortByColumn": "Month Seasonality Sort"
          },
          {
            "name": "Week Seasonality",
            "dataType": "string",
            "sourceColumn": "Week Seasonality",
            "sortByColumn": "Week Seasonality Sort"
          },
          {
            "name": "Day Seasonality",
            "dataType": "string",
            "sourceColumn": "Day Seasonality",
            "sortByColumn": "Day Seasonality Sort"
          },
          {
            "name": "Day of Week",
            "dataType": "string",
            "sourceColumn": "Day of Week",
            "sortByColumn": "Day of Week Sort"
          },
          {
            "name": "Day of Week Sort",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Day of Week Sort"
          },
          {
            "name": "Week Seasonality Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Week Seasonality Sort"
          },
          {
            "name": "Day Seasonality Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Day Seasonality Sort"
          },
          {
            "name": "TYDay",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TYDay"
          },
          {
            "name": "LYDay",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LYDay"
          },
          {
            "name": "Month Seasonality Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Month Seasonality Sort"
          },
          {
            "name": "2LYDay",
            "dataType": "int64",
            "sourceColumn": "2LYDay"
          },
          {
            "name": "Holiday",
            "dataType": "boolean",
            "sourceColumn": "Holiday"
          },
          {
            "name": "Week Num",
            "dataType": "int64",
            "sourceColumn": "WeekNum"
          },
          {
            "name": "Week ID",
            "dataType": "int64",
            "sourceColumn": "WeekID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_CalendarFiscal = Source{[Schema=\"Dim\",Item=\"CalendarFiscal\"]}[Data]",
                "in",
                "    Dim_CalendarFiscal"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Maximum of Week Num",
            "expression": "MAX([Week Num])"
          }
        ],
        "hierarchies": [
          {
            "name": "Fiscal Calendar",
            "levels": [
              {
                "name": "Year",
                "ordinal": 0,
                "column": "Year"
              },
              {
                "name": "Quarter",
                "ordinal": 1,
                "column": "Quarter"
              },
              {
                "name": "Month",
                "ordinal": 2,
                "column": "Month"
              },
              {
                "name": "Date",
                "ordinal": 3,
                "column": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "Scrap",
        "isHidden": true,
        "defaultDetailRowsDefinition": {
          "expression": [
            "SELECTCOLUMNS('Scrap'",
            "    ,\"Pigment\",'Scrap'[PigmentKey]",
            "    ,\"User Name\",'Scrap'[UserName]",
            "    ,\"Shift Name\",RELATED('Shift'[Shift Name])",
            "    ,\"Scrap Lbs\",'Scrap'[$Lbs]",
            ")"
          ]
        },
        "columns": [
          {
            "name": "PlantID",
            "dataType": "int64",
            "sourceColumn": "PlantID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "sourceColumn": "ShiftID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "sourceColumn": "MachineID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "sourceColumn": "ProductID"
          },
          {
            "name": "RepairID",
            "dataType": "int64",
            "sourceColumn": "RepairID"
          },
          {
            "name": "RepairReasonID",
            "dataType": "int64",
            "sourceColumn": "RepairReasonID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "sourceColumn": "DateID"
          },
          {
            "name": "UserName",
            "dataType": "string",
            "sourceColumn": "UserName"
          },
          {
            "name": "ErrorKey",
            "dataType": "string",
            "sourceColumn": "ErrorKey"
          },
          {
            "name": "PigmentKey",
            "dataType": "string",
            "sourceColumn": "PigmentKey"
          },
          {
            "name": "$Qty",
            "dataType": "double",
            "sourceColumn": "Qty"
          },
          {
            "name": "$Lbs",
            "dataType": "double",
            "sourceColumn": "Lbs"
          },
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID"
          },
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "HourID",
            "dataType": "int64",
            "sourceColumn": "HourID"
          },
          {
            "name": "ComponentID",
            "dataType": "int64",
            "sourceColumn": "ComponentID"
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "sourceColumn": "CurrentShiftID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Scrap = Source{[Schema=\"Fact\",Item=\"Scrap\"]}[Data]",
                "in",
                "    Fact_Scrap"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Scrap Qty",
            "expression": "SUM([$Qty])",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "Scrap Lbs",
            "expression": "SUM([$Lbs])",
            "formatString": "#,0.00",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Repair",
        "columns": [
          {
            "name": "Repair ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "RepairID",
            "sortByColumn": "Repair Sort"
          },
          {
            "name": "Repair Key",
            "dataType": "string",
            "sourceColumn": "RepairKey",
            "sortByColumn": "Repair Sort"
          },
          {
            "name": "Repair Name",
            "dataType": "string",
            "sourceColumn": "RepairName",
            "sortByColumn": "Repair Sort"
          },
          {
            "name": "Repair Desc",
            "dataType": "string",
            "sourceColumn": "RepairDesc"
          },
          {
            "name": "Repair Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "RepairSort"
          },
          {
            "name": "$Scrap",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Scrap"
          },
          {
            "name": "$Repair",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Repair"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Repair = Source{[Schema=\"dbo\",Item=\"DimRepair\"]}[Data]",
                "in",
                "    Dim_Repair"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/ ;Operations\",",
                  "    Dim_Repair = Source{[Schema=\"dbo\",Item=\"DimRepair\"]}[Data]",
                  "in",
                  "    Dim_Repair</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "IsRepair",
            "expression": "MAX([$Repair])",
            "isHidden": true
          },
          {
            "name": "IsScrap",
            "expression": "MAX([$Scrap])",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Repair Reason",
        "columns": [
          {
            "name": "Repair Reason ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "RepairReasonID"
          },
          {
            "name": "Repair Reason Key",
            "dataType": "string",
            "sourceColumn": "RepairReasonKey",
            "sortByColumn": "Repair Reason Sort"
          },
          {
            "name": "Repair Reason Name",
            "dataType": "string",
            "sourceColumn": "RepairReasonName",
            "sortByColumn": "Repair Reason Sort"
          },
          {
            "name": "Repair Reason Desc",
            "dataType": "string",
            "sourceColumn": "RepairReasonDesc",
            "sortByColumn": "Repair Reason Sort"
          },
          {
            "name": "Repair Reason Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "RepairReasonSort"
          },
          {
            "name": "OrgCode",
            "dataType": "string",
            "sourceColumn": "OrgCode"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_RepairReason = Source{[Schema=\"dbo\",Item=\"DimRepairReason\"]}[Data]",
                "in",
                "    Dim_RepairReason"
              ]
            }
          }
        ]
      },
      {
        "name": "Goal",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "$ProductionDays",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ProductionDays",
            "formatString": "0.00"
          },
          {
            "name": "$MachineCount",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineCount",
            "formatString": "0.00"
          },
          {
            "name": "$NSP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "NSP"
          },
          {
            "name": "$MachineCountBudget",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineCountBudget"
          },
          {
            "name": "$NSPBudget",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "NSPBudget"
          },
          {
            "name": "$Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Cost"
          },
          {
            "name": "$CostBudget",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "CostBudget"
          },
          {
            "name": "$Scrap",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Scrap"
          },
          {
            "name": "$Repair",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Repair"
          },
          {
            "name": "$MissedCycle",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MissedCycle"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "sourceColumn": "CurrentShiftID"
          },
          {
            "name": "$ForecastDays",
            "dataType": "int64",
            "sourceColumn": "ForecastDays"
          },
          {
            "name": "GoalFactor",
            "dataType": "double",
            "sourceColumn": "GoalFactor"
          },
          {
            "name": "$FTEHeadcount",
            "dataType": "int64",
            "sourceColumn": "FTEHeadcount"
          },
          {
            "name": "$TrainingHeadcount",
            "dataType": "int64",
            "sourceColumn": "TrainingHeadcount"
          },
          {
            "name": "$FTEBudget",
            "dataType": "int64",
            "sourceColumn": "FTEBudget"
          },
          {
            "name": "$TrainingBudget",
            "dataType": "int64",
            "sourceColumn": "TrainingBudget"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Goal = Source{[Schema=\"Fact\",Item=\"Goal\"]}[Data]",
                "in",
                "    Fact_Goal"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Production $ Budget (NSP)",
            "expression": "SUM([$NSPBudget])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production $ Forecast (NSP)",
            "expression": "SUM([$NSP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production Days Forecast",
            "expression": "AVERAGE([$ProductionDays])"
          },
          {
            "name": "Machine Count Budget",
            "expression": "SUM([$MachineCountBudget])"
          },
          {
            "name": "Production $ Forecast (Cost)",
            "expression": "SUM([$Cost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production $ Budget (Cost)",
            "expression": "SUM([$CostBudget])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Repair Goal",
            "expression": "MAX([$Repair])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Missed Cycle Goal",
            "expression": "MAX([$MissedCycle])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Scrap Goal",
            "expression": "MAX([$Scrap])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Machine Count",
            "expression": "SUM([$MachineCount])",
            "formatString": "#,0.00"
          },
          {
            "name": "Forecast Days",
            "expression": "SUM([$ForecastDays])"
          },
          {
            "name": "TrainingBudget",
            "expression": "SUM([$TrainingBudget])",
            "isHidden": true
          },
          {
            "name": "FTEForecast",
            "expression": "SUM([$FTEHeadcount])",
            "isHidden": true
          },
          {
            "name": "TrainingForecast",
            "expression": "SUM([$TrainingHeadcount])",
            "isHidden": true
          },
          {
            "name": "FTEBudget",
            "expression": "SUM([$FTEBudget])",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Machine Goal",
        "isHidden": true,
        "columns": [
          {
            "name": "MachineID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "$Rounds",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Rounds"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_MachineGoal = Source{[Schema=\"Fact\",Item=\"MachineGoal\"]}[Data]",
                "in",
                "    Fact_MachineGoal"
              ]
            }
          }
        ]
      },
      {
        "name": "Time Series Bridge",
        "isHidden": true,
        "columns": [
          {
            "name": "TimeSeriesID",
            "dataType": "int64",
            "sourceColumn": "TimeSeriesID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "sourceColumn": "DateID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_M2MTimeSeries = Source{[Schema=\"dbo\",Item=\"DimM2MTimeSeries\"]}[Data]",
                "in",
                "    Dim_M2MTimeSeries"
              ]
            }
          }
        ]
      },
      {
        "name": "Time Series",
        "columns": [
          {
            "name": "Time Series ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TimeSeriesID",
            "sortByColumn": "Time Series Sort"
          },
          {
            "name": "Time Series Key",
            "dataType": "string",
            "sourceColumn": "TimeSeriesKey",
            "sortByColumn": "Time Series Sort"
          },
          {
            "name": "Time Series Name",
            "dataType": "string",
            "sourceColumn": "TimeSeriesName",
            "sortByColumn": "Time Series Sort"
          },
          {
            "name": "Time Series Desc",
            "dataType": "string",
            "sourceColumn": "TimeSeriesDesc"
          },
          {
            "name": "Time Series Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TimeSeriesSort"
          },
          {
            "name": "Time Series",
            "dataType": "string",
            "sourceColumn": "TimeSeriesType",
            "sortByColumn": "Time Series Type Sort"
          },
          {
            "name": "Time Series Type Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TimeSeriesTypeSort"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_TimeSeries = Source{[Schema=\"dbo\",Item=\"DimTimeSeries\"]}[Data]",
                "in",
                "    Dim_TimeSeries"
              ]
            }
          }
        ]
      },
      {
        "name": "Calculated Measures",
        "isHidden": true,
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "$Scrap%",
            "dataType": "boolean",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values1]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "$Repair%",
            "dataType": "boolean",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values2]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values3",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values3]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values4",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values4]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values5",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values5]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values6",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values6]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values7",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values7]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values8",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values8]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values9",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values9]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values10",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values10]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values11",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values11]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values12",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values12]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values13",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values13]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values14",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values14]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values15",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values15]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values16",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values16]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values17",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values17]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values18",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values18]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values19",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values19]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values20",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values20]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values21",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values21]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values22",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values22]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values23",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values23]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values24",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values24]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values25",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values25]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values26",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values26]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values27",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values27]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values28",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values28]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values29",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values29]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values30",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values30]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values31",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values31]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values32",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values32]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values33",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values33]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values34",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values34]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values35",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values35]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values36",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values36]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values37",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values37]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values38",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values38]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values39",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values39]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values40",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values40]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values41",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values41]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values42",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values42]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values43",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values43]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values44",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values44]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values45",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values45]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values46",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values46]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values47",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values47]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values48",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values48]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values49",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values49]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values50",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values50]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values51",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values51]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values52",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values52]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values53",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values53]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values54",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values54]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values55",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values55]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values56",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values56]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values57",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values57]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values58",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values58]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values59",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values59]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values60",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values60]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values61",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values61]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values62",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values62]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values63",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values63]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values64",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values64]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values65",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values65]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values66",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values66]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values67",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values67]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values68",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values68]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values69",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values69]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values70",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values70]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values71",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values71]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values72",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values72]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values73",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values73]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values74",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values74]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values75",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values75]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values76",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values76]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values77",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values77]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values78",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values78]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values79",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values79]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Values80",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Values80]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE (\"Values1\", BOOLEAN, \"Values2\", BOOLEAN, \"Values3\", BOOLEAN, \"Values4\", BOOLEAN, \"Values5\", BOOLEAN, \"Values6\", BOOLEAN, \"Values7\", BOOLEAN, \"Values8\", BOOLEAN, \"Values9\", BOOLEAN, \"Values10\", BOOLEAN, \"Values11\", BOOLEAN, \"Values12\", BOOLEAN, \"Values13\", BOOLEAN, \"Values14\", BOOLEAN, \"Values15\", BOOLEAN, \"Values16\", BOOLEAN, \"Values17\", BOOLEAN, \"Values18\", BOOLEAN, \"Values19\", BOOLEAN, \"Values20\", BOOLEAN, \"Values21\", BOOLEAN, \"Values22\", BOOLEAN, \"Values23\", BOOLEAN, \"Values24\", BOOLEAN, \"Values25\", BOOLEAN, \"Values26\", BOOLEAN, \"Values27\", BOOLEAN, \"Values28\", BOOLEAN, \"Values29\", BOOLEAN, \"Values30\", BOOLEAN, \"Values31\", BOOLEAN, \"Values32\", BOOLEAN, \"Values33\", BOOLEAN, \"Values34\", BOOLEAN, \"Values35\", BOOLEAN, \"Values36\", BOOLEAN, \"Values37\", BOOLEAN, \"Values38\", BOOLEAN, \"Values39\", BOOLEAN, \"Values40\", BOOLEAN, \"Values41\", BOOLEAN, \"Values42\", BOOLEAN, \"Values43\", BOOLEAN, \"Values44\", BOOLEAN, \"Values45\", BOOLEAN, \"Values46\", BOOLEAN, \"Values47\", BOOLEAN, \"Values48\", BOOLEAN, \"Values49\", BOOLEAN, \"Values50\", BOOLEAN, \"Values51\", BOOLEAN, \"Values52\", BOOLEAN, \"Values53\", BOOLEAN, \"Values54\", BOOLEAN, \"Values55\", BOOLEAN, \"Values56\", BOOLEAN, \"Values57\", BOOLEAN, \"Values58\", BOOLEAN, \"Values59\", BOOLEAN, \"Values60\", BOOLEAN, \"Values61\", BOOLEAN, \"Values62\", BOOLEAN, \"Values63\", BOOLEAN, \"Values64\", BOOLEAN, \"Values65\", BOOLEAN, \"Values66\", BOOLEAN, \"Values67\", BOOLEAN, \"Values68\", BOOLEAN, \"Values69\", BOOLEAN, \"Values70\", BOOLEAN, \"Values71\", BOOLEAN, \"Values72\", BOOLEAN, \"Values73\", BOOLEAN, \"Values74\", BOOLEAN, \"Values75\", BOOLEAN, \"Values76\", BOOLEAN, \"Values77\", BOOLEAN, \"Values78\", BOOLEAN, \"Values79\", BOOLEAN, \"Values80\", BOOLEAN, {{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}})"
            }
          }
        ],
        "measures": [
          {
            "name": "Scrap %",
            "expression": "DIVIDE([Lbs Scrapped],[Lbs Produced])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Scrap & Repair\\Scrap",
            "kpi": {
              "targetExpression": "'Goal'[Scrap Goal]",
              "targetFormatString": "0.00%;-0.00%;0.00%",
              "statusGraphic": "Road Signs",
              "statusExpression": [
                "var x='Calculated Measures'[Scrap %]/'Calculated Measures'[_Scrap % Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<1,1,",
                "\t                If(x<1.248276,0,-1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "LinearReversed"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "100"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "124.8276"
                }
              ]
            }
          },
          {
            "name": "Repair %",
            "description": "Pieces Repaired out of Pieces Produced",
            "expression": [
              "DIVIDE([Pieces Repaired],[Pieces Produced])",
              "--Repair %:=DIVIDE([Pieces Repaired],SUM('Production'[$Production Qty]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Scrap & Repair\\Repair"
          },
          {
            "name": "Lbs Scrapped",
            "description": "Pounds Scrapped under the repair reason Roto_Scrap",
            "expression": "CALCULATE(SUM('Scrap'[$Lbs]),'Repair'[Repair Key]=\"Roto_Scrap\")",
            "formatString": "#,0.00",
            "displayFolder": "Scrap & Repair\\Scrap"
          },
          {
            "name": "Lbs Produced",
            "description": "Pounds Scrapped + Pounds of Finished Goods Resin Produced",
            "expression": "(CALCULATE(SUM('Scrap'[$Lbs]),'Repair'[Repair Key]=\"Roto_Scrap\")+SUM('Production'[$FG Total Resin]))",
            "formatString": "#,0.00",
            "displayFolder": "Production"
          },
          {
            "name": "Pieces Repaired",
            "description": "Pieces Scrapped under repair reason Repair",
            "expression": " CALCULATE(SUM('Scrap'[$Qty]),'Repair'[Repair Key]=\"Repair\")",
            "formatString": "#,0",
            "displayFolder": "Scrap & Repair\\Repair"
          },
          {
            "name": "Availability %",
            "description": "Machine Run Time over Planned Production Time",
            "expression": " DIVIDE([Machine Run Time],[Planned Production Time])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE"
          },
          {
            "name": "Quality %",
            "description": "Good Production Quantity over Total Production Quantity",
            "expression": " DIVIDE([Production Qty] - [Pieces Scrapped] - [Pieces Repaired],[Production Qty])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE"
          },
          {
            "name": "Performance %",
            "description": "Production Qty over Production Quantity Goal",
            "expression": [
              "  DIVIDE([Production Qty],[Production Qty Goal Adj])",
              "--IF([Missed Cycle Time],1 - [Missed Cycle %],\"\")",
              "--DIVIDE([Total Machine Hours],[Machine Run Time])"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE"
          },
          {
            "name": "OEE",
            "description": "Product of Availablity, Performance and Quality",
            "expression": " [Availability %] * [Performance %] * [Quality %]",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE"
          },
          {
            "name": "Shift Length",
            "description": "Length of shift in mins?",
            "expression": " 'Shift Length'[ShiftLength]",
            "formatString": "#,0"
          },
          {
            "name": "Machine Run Time",
            "description": "Cycle Time + Index Time + Missed Cycle Time",
            "expression": " ([Cycle Time]+[Index Time]+[Missed Cycle Time])",
            "formatString": "0.00",
            "displayFolder": "OEE"
          },
          {
            "name": "Planned Production Time",
            "description": "Shift Length minus Breaks (not specified at this time)",
            "expression": " [Shift Length] - [Breaks]",
            "formatString": "0.00",
            "displayFolder": "OEE"
          },
          {
            "name": "Total Standard Cost",
            "description": "Standard Cost of product produced",
            "expression": " SUMX(VALUES('Product'[ProductID]),CALCULATE(MAX(Standards[TotalProcessingCost])))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Production",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Missed Cycle %",
            "expression": " DIVIDE([Missed Cycle Time],[Machine Run Time])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE",
            "kpi": {
              "targetExpression": "'Goal'[Missed Cycle Goal]",
              "targetFormatString": "0.00%;-0.00%;0.00%",
              "statusGraphic": "Road Signs",
              "statusExpression": [
                "var x='Calculated Measures'[Missed Cycle %]/'Calculated Measures'[_Missed Cycle % Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<1,1,",
                "\t                If(x<1.15,0,-1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "LinearReversed"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "100"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "115"
                }
              ]
            }
          },
          {
            "name": "NSP per Machine Hour",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE(CALCULATE(SUM(Production[$Total Dollars]),DATEADD('Fiscal Calendar'[Date],-90,DAY)),CALCULATE([Cycle Time]+[Index Time],DATEADD('Fiscal Calendar'[Date],-90,DAY)))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Production",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "NSP Missed Cycle Opportunity",
            "description": "NSP metrics no longer used",
            "expression": " ([NSP per Machine Hour] * ([Missed Cycle Time] - [Missed Cycle Goal]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Production",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "NSP Availability Opportunity",
            "description": "NSP metrics no longer used",
            "expression": " ([NSP per Machine Hour] * ([Planned Production Time]*[Machine Runtime Goal] - [Machine Run Time]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "OEE",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Calendar Days",
            "description": "Count of days",
            "expression": " CALCULATE(DISTINCTCOUNT('Fiscal Calendar'[Date]))",
            "formatString": "0",
            "displayFolder": "OEE"
          },
          {
            "name": "Machines Ran",
            "description": "Average machine count based on runtime for the entire shift",
            "expression": [
              " SUMX('Location',SUMX('Machine',IF(NOT(ISBLANK([Machine Run Time])), DIVIDE([Machine Run Time],[Shift Hours]), DIVIDE([Total Machine Hours],[Shift Hours]))))",
              "--SUMX('Location',IF([Machine Run Time] <> 0, DIVIDE([Machine Run Time],[Shift Hours]), DIVIDE([Total Machine Hours],[Shift Hours])))",
              "--DIVIDE(SUMX('Shift Hours',),COUNT('Shift Hours'[ShiftID]))"
            ],
            "formatString": "0.00",
            "displayFolder": "Production"
          },
          {
            "name": "Machine Runtime Goal",
            "description": "85% goal",
            "expression": " .85"
          },
          {
            "name": "NSP per Pound",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE(CALCULATE(SUM(Production[$Total Dollars]),'Time Series'[Time Series Name]=\"Trailing 90 Days\"),CALCULATE(SUM(Production[$FG Resign Weight]),'Time Series'[Time Series Name]=\"Trailing 90 Days\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "NSP Scrap Opportunity",
            "description": "NSP metrics no longer used",
            "expression": " ([Lbs Produced]*[Scrap %]-[Lbs Produced]*[Scrap Goal])*[NSP per Pound]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "NSP per Machine",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE([Production $ (NSP)],[Machines Ran])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "NSP per Machine Goal",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE([Production $ Forecast (NSP)],[Machine Count Forecast])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Missed Cycle Count Goal",
            "description": "5% of total cycles as the goal",
            "expression": " ROUNDDOWN([Cycle Count]*.05,0)",
            "displayFolder": "OEE"
          },
          {
            "name": "Last Update Time",
            "description": "Last refresh date",
            "expression": " NOW()",
            "formatString": "MM/dd/yy hh:mm tt"
          },
          {
            "name": "Production vs Forecast $ (NSP)",
            "description": "Production NSP vs Goal (no longer used)",
            "expression": " Production[Production $ (NSP)] - 'Goal'[Production $ Forecast (NSP)]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production vs Forecast % (NSP)",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE(Production[Production $ (NSP)]-'Goal'[Production $ Forecast (NSP)],'Goal'[Production $ Forecast (NSP)])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Production vs Forecast % (Cost)",
            "description": "Production COGS % of Goal",
            "expression": " DIVIDE(Production[Production $ (Cost)]-'Goal'[Production $ Forecast (Cost)],'Goal'[Production $ Forecast (Cost)])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Production vs Forecast $ (Cost)",
            "description": "Production COGS variance to Goal",
            "expression": " Production[Production $ (Cost)]-'Goal'[Production $ Forecast (Cost)]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Spiders per Machine",
            "expression": " DIVIDE([Rounds Packed],CALCULATE(SUM('Production'[$SpidersRan]), ALL('Product'[SKU: Name])))*8",
            "formatString": "0.00"
          },
          {
            "name": "Production $ (Margin)",
            "description": "NSP metrics no longer used",
            "expression": " Production[Production $ (NSP)] - Production[Production $ (Cost)]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Margin $ per Machine Hour",
            "description": "NSP metrics no longer used",
            "expression": " DIVIDE([Production $ (Margin)],Production[Total Machine Hours])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Count Forecast",
            "description": "Machine Count Goal over Forecast Days",
            "expression": [
              " SUMX('Location',Divide('Goal'[Machine Count],'Goal'[Forecast Days]))",
              "--Divide('Goal'[Machine Count],Production[Work Day])"
            ]
          },
          {
            "name": "SKU Attainment",
            "description": "Production Qty over Standard Output",
            "expression": " DIVIDE([Production Qty],[Production Qty Goal])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "OEE"
          },
          {
            "name": "Forecast Progress $ (NSP)",
            "description": "NSP metrics no longer used",
            "expression": " SUMX('Goal',IF([Production vs Forecast $ (NSP)] + [Production $ Forecast (NSP)] = 0, 0, [Production vs Forecast $ (NSP)]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Pieces Scrapped",
            "description": "Pieces scrapped with repair reason Roto_Scrap",
            "expression": " CALCULATE(SUM('Scrap'[$Qty]),'Repair'[Repair Key]=\"Roto_Scrap\")",
            "formatString": "0",
            "displayFolder": "Scrap & Repair\\Scrap"
          },
          {
            "name": "Scrap Qty %",
            "expression": "DIVIDE([Pieces Scrapped],SUM('Production'[$Production Qty]))",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Scrap & Repair\\Scrap"
          },
          {
            "name": "Pieces Repaired Test",
            "expression": " SUMX('Scrap',Scrap[Scrap Qty]*Repair[IsRepair])--CALCULATE(SUM('Scrap'[$Qty]),'Repair'[Repair Key]=\"Repair\")",
            "formatString": "0",
            "displayFolder": "Scrap & Repair\\Repair"
          },
          {
            "name": "Shift Factor",
            "expression": " [ShiftScalar]"
          },
          {
            "name": "Headcount",
            "expression": [
              " ",
              "CALCULATE(",
              "SUMX(Headcount, [Distinct Headcount]), --base metric",
              "Filter ('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ( 'Headcount'[DateID] ) ) --last non empty",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Hire",
            "expression": " [$Hire]",
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Term",
            "expression": " [$Term]",
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Average Headcount",
            "expression": [
              " ",
              "CALCULATE (",
              "        AVERAGEX (",
              "            VALUES ( Headcount[DateID] ),",
              "            CALCULATE ( DISTINCTCOUNT ( Headcount[EmployeeID] ) )",
              "        )",
              ")"
            ],
            "formatString": "#,0.00",
            "displayFolder": "Headcount"
          },
          {
            "name": "Turnover",
            "expression": " DIVIDE([Term],[Average Headcount])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Headcount"
          },
          {
            "name": "FTE Budget",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('Goal', [FTEBudget]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Goal'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "FTE Forecast",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('Goal', [FTEForecast]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Goal'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Training Budget",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('Goal', [TrainingBudget]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Goal'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Training Forecast",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('Goal', [TrainingForecast]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Goal'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Headcount"
          },
          {
            "name": "Production Qty Goal Adj",
            "expression": " SUMX('Machine',[Production Qty Goal] * IF(ISBLANK([Availability %]),1,[Availability %]))",
            "formatString": "#,0",
            "displayFolder": "OEE"
          },
          {
            "name": "Machine Run Time Test",
            "expression": " SUMX('Machine',[Machine Run Time])",
            "formatString": "0.00",
            "displayFolder": "OEE"
          },
          {
            "name": "Production Qty Goal Adj Test",
            "expression": " [Production Qty Goal] * IF(ISBLANK([Labor Efficiency Cost]),1,[Labor Efficiency Cost])",
            "formatString": "#,0",
            "displayFolder": "OEE"
          },
          {
            "name": "Assembly Labor Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Assembly Labor Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Assembly Lead Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Assembly Lead Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Roto Float Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Roto Float Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Roto Operator Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Roto Operator Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Total Assembly Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Total Assembly Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Total Roto Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Total Roto Hours $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Total Assembly Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Total Assembly Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Roto Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Total Roto Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")",
              ""
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Processing Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Total Processing Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Machine Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Material Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Material Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Material Overhead Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Material Overhead Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Outside Processing Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Outside Processing Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Overhead Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Overhead Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")",
              ""
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Resource Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Resource Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")",
              ""
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Item Cost (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Item Cost $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Standards\\Cost",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Roto Hours Burned",
            "expression": "CALCULATE(SUM('Labor'[$Hours]),'Department'[Department Key]=\"705-ROTO\")",
            "formatString": "#,0.00",
            "displayFolder": "Labor"
          },
          {
            "name": "Assy Hours Burned",
            "expression": "CALCULATE(SUM('Labor'[$Hours]),'Department'[Department Key]=\"706-ASSY\")",
            "formatString": "#,0.00",
            "displayFolder": "Labor"
          },
          {
            "name": "Roto Labor Efficiency Hrs",
            "expression": " DIVIDE([Total Roto Earned Hours],[Roto Hours Burned])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Labor"
          },
          {
            "name": "Assy Labor Efficiency Hrs",
            "expression": " DIVIDE([Total Assembly Earned Hours],[Assy Hours Burned])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Labor"
          },
          {
            "name": "Labor Efficiency Hrs",
            "expression": " DIVIDE([Total Roto Earned Hours]+[Total Assembly Earned Hours],[Matl Hours Burned]+[Roto Hours Burned]+[Assy Hours Burned])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Labor"
          },
          {
            "name": "Roto Cost Burned",
            "expression": "CALCULATE(SUM('Labor'[$Wages]),'Department'[Department Key]=\"705-ROTO\")",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Labor",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Assy Cost Burned",
            "expression": "CALCULATE(SUM('Labor'[$Wages]),'Department'[Department Key]=\"706-ASSY\")",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Labor",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Roto Labor Efficiency Cost",
            "expression": " DIVIDE([Total Roto Earned Cost],[Roto Cost Burned])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Labor"
          },
          {
            "name": "Assy Labor Efficiency Cost",
            "expression": " DIVIDE([Total Assembly Earned Cost],[Assy Cost Burned])",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Labor"
          },
          {
            "name": "Machine Size (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Machine Size $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Matl Cost Burned",
            "expression": "CALCULATE(SUM('Labor'[$Wages]),OR('Department'[Department Key]=\"704-MATL\",'Department'[Department Key]=\"704-MATLPROC\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Labor",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Matl Hours Burned",
            "expression": "CALCULATE(SUM('Labor'[$Hours]),OR('Department'[Department Key]=\"704-MATL\",'Department'[Department Key]=\"704-MATLPROC\"))",
            "formatString": "#,0.00",
            "displayFolder": "Labor"
          },
          {
            "name": "Labor Efficiency Cost",
            "expression": " DIVIDE([Total Roto Earned Cost]+[Total Assembly Earned Cost],[Matl Cost Burned]+[Roto Cost Burned]+[Assy Cost Burned])"
          },
          {
            "name": "Planned Production Qty",
            "expression": " SUMX(FILTER(Plan, Plan[Inventory Type ID]=10),[Plan Quantity])",
            "formatString": "#,0"
          },
          {
            "name": "Production % of Plan",
            "expression": " DIVIDE([Production Qty],[Planned Production Qty])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Production var to Plan",
            "expression": " [Production Qty]-[Planned Production Qty]",
            "formatString": "#,0"
          },
          {
            "name": "Planned Machine Hours",
            "expression": " SUMX(FILTER(Plan, Plan[Inventory Type ID]=10),[Plan Machine Hours])",
            "formatString": "#,0.00"
          },
          {
            "name": "Production Absolute Error",
            "expression": [
              " SUMX('Product',IF([Planned Production Qty]>0,ABS([Production var to Plan]),BLANK()))",
              "--ABS(SUMX('Product',IF([Planned Production Qty]>0,[Production var to Plan],BLANK())))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Production Absolute Error %",
            "expression": [
              " DIVIDE(SUMX('Product',IF([Planned Production Qty]>0,ABS([Production var to Plan]),BLANK())), [Planned Production Qty])",
              "--DIVIDE([Production Absolute Error],[Planned Production Qty])"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Machine Hours (Std)",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [MachineHours]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.0000",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Average Resin Variance",
            "expression": " DIVIDE([Resin Variance],[Resin Sample Size])",
            "formatString": "0.00"
          },
          {
            "name": "Resin Sample Percent",
            "expression": " DIVIDE([Resin Sample Size],[Pieces Produced])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Standard Deviation Resin Variance",
            "expression": " STDEV.P('Resin QA'[Variance_Resin])",
            "formatString": "0.00"
          },
          {
            "name": "Employee Tenure",
            "expression": [
              " ",
              "DIVIDE(CALCULATE(",
              "    SUMX('Employee', [$Tenure]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Headcount'[DateID])) --last non empty",
              "),[Headcount])"
            ]
          },
          {
            "name": "Total Tenure",
            "expression": [
              " SUMX(",
              "SUMMARIZE('Headcount', 'Headcount'[EmployeeID], \"Total Tenure\", MAX('Headcount'[Tenure])),",
              "[Total Tenure])"
            ]
          },
          {
            "name": "Average Tenure",
            "expression": " DIVIDE([Total Tenure],[Distinct Headcount])",
            "formatString": "0.00"
          },
          {
            "name": "Production Absolute Error % 2",
            "expression": " DIVIDE(SUMX('Product',ABS([Production var to Plan])), [Planned Production Qty])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Production $ Budget (Cost) Test",
            "expression": " [Production $ Budget (Cost) - TOYS] + [Production $ Budget (Cost) - Custom]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Hrs (Budget)",
            "expression": " [Machine Hrs (Budget) - TOYS] + [Machine Hrs (Budget) - Custom]",
            "formatString": "#,0.00"
          },
          {
            "name": "Units per Spider",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [Units Per Spider $]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "Standards\\Hours"
          },
          {
            "name": "Units per Spider Test",
            "expression": [
              " ",
              "CALCULATE(",
              "    MAXX('Standards', [UnitsPerSpider]), --base metric",
              "    FILTER('Fiscal Calendar', 'Fiscal Calendar'[Date ID] = Max ('Standards'[DateID])) --last non empty",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "Standards\\Hours"
          }
        ]
      },
      {
        "name": "Same Period",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "LY",
              "expression": [
                "IF (",
                "    HASONEVALUE ( 'Fiscal Calendar'[Year] ),",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        FILTER (",
                "            ALL ( 'Fiscal Calendar' ),",
                "            'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] ) - 1",
                "                && CONTAINS(",
                "                    VALUES ( 'Fiscal Calendar' ),",
                "                    'Fiscal Calendar'[LYDay],",
                "                    'Fiscal Calendar'[TYDay]",
                "                )",
                "        )",
                "    ),",
                "    BLANK()",
                ")"
              ]
            },
            {
              "name": "TY",
              "expression": "SELECTEDMEASURE()"
            },
            {
              "name": "TY-LY",
              "expression": [
                "SELECTEDMEASURE() - ",
                "IF (",
                "    HASONEVALUE ( 'Fiscal Calendar'[Year] ),",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        FILTER (",
                "            ALL ( 'Fiscal Calendar' ),",
                "            'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] ) - 1",
                "                && CONTAINS(",
                "                    VALUES ( 'Fiscal Calendar' ),",
                "                    'Fiscal Calendar'[LYDay],",
                "                    'Fiscal Calendar'[TYDay]",
                "                )",
                "        )",
                "    ),",
                "    BLANK ()",
                ")"
              ]
            },
            {
              "name": "TY % LY",
              "expression": [
                "",
                "    DIVIDE(",
                "        SELECTEDMEASURE()",
                "        -IF (",
                "            HASONEVALUE ( 'Fiscal Calendar'[Year] ),",
                "            CALCULATE (",
                "                SELECTEDMEASURE(),",
                "                FILTER (",
                "                    ALL ( 'Fiscal Calendar' ),",
                "                    'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] ) - 1",
                "                        && CONTAINS(",
                "                            VALUES ( 'Fiscal Calendar' ),",
                "                            'Fiscal Calendar'[LYDay],",
                "                            'Fiscal Calendar'[TYDay]",
                "                        )",
                "                )",
                "            ),",
                "            BLANK ()",
                "        )",
                "        ,",
                "        IF (",
                "            HASONEVALUE ( 'Fiscal Calendar'[Year] ),",
                "            CALCULATE (",
                "                SELECTEDMEASURE(),",
                "                FILTER (",
                "                    ALL ( 'Fiscal Calendar' ),",
                "                    'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] ) - 1",
                "                        && CONTAINS(",
                "                            VALUES ( 'Fiscal Calendar' ),",
                "                            'Fiscal Calendar'[LYDay],",
                "                            'Fiscal Calendar'[TYDay]",
                "                        )",
                "                )",
                "            ),",
                "            BLANK ()",
                "        )",
                "    ) ",
                "",
                ""
              ],
              "formatStringDefinition": {
                "expression": "\"0.0%\""
              }
            }
          ]
        },
        "columns": [
          {
            "name": "Last Year",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Time Intelligence",
        "calculationGroup": {
          "precedence": 1,
          "calculationItems": [
            {
              "name": "MTD",
              "expression": [
                "IF (",
                "    HASONEVALUE ( 'Fiscal Calendar'[Year] )",
                "        && HASONEVALUE ('Fiscal Calendar'[Month] ),",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        FILTER (",
                "            ALL ( 'Fiscal Calendar' ),",
                "            'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] )",
                "                && 'Fiscal Calendar'[Month] = VALUES ( 'Fiscal Calendar'[Month] )",
                "                && 'Fiscal Calendar'[Date] <= MAX ( 'Fiscal Calendar'[Date] )",
                "        )",
                "    ),",
                "    BLANK ()",
                ")"
              ]
            },
            {
              "name": "QTD",
              "expression": [
                "IF (",
                "    HASONEVALUE ( 'Fiscal Calendar'[Year] )",
                "        && HASONEVALUE ('Fiscal Calendar'[Quarter] ),",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        FILTER (",
                "            ALL ( 'Fiscal Calendar' ),",
                "            'Fiscal Calendar'[Year] = VALUES ( 'Fiscal Calendar'[Year] )",
                "                && 'Fiscal Calendar'[Quarter] = VALUES ( 'Fiscal Calendar'[Quarter] )",
                "                && 'Fiscal Calendar'[Date] <= MAX ( 'Fiscal Calendar'[Date] )",
                "        )",
                "    ),",
                "    BLANK ()",
                ")"
              ]
            }
          ]
        },
        "columns": [
          {
            "name": "Time Series",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Location",
        "columns": [
          {
            "name": "Location ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "Location Key",
            "dataType": "string",
            "sourceColumn": "LocationKey",
            "sortByColumn": "Sort"
          },
          {
            "name": "Location Name",
            "dataType": "string",
            "sourceColumn": "LocationName",
            "sortByColumn": "Sort"
          },
          {
            "name": "Location: Name",
            "dataType": "string",
            "sourceColumn": "LocationDesc",
            "sortByColumn": "Sort"
          },
          {
            "name": "Sort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sort"
          },
          {
            "name": "LocationType",
            "dataType": "string",
            "sourceColumn": "LocationType"
          },
          {
            "name": "LocationCountry",
            "dataType": "string",
            "sourceColumn": "LocationCountry"
          },
          {
            "name": "$ShiftScalar",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ShiftScalar"
          },
          {
            "name": "GLLocationID",
            "dataType": "int64",
            "sourceColumn": "GLLocationID"
          },
          {
            "name": "$WarehouseCapacity",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "WarehouseCapacity"
          },
          {
            "name": "PhysicalLocation",
            "dataType": "string",
            "sourceColumn": "PhysicalLocation"
          },
          {
            "name": "PlanID",
            "dataType": "int64",
            "sourceColumn": "PlanID"
          },
          {
            "name": "COGSLocationID",
            "dataType": "int64",
            "sourceColumn": "COGSLocationID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Location = Source{[Schema=\"dbo\",Item=\"DimLocation\"]}[Data]",
                "in",
                "    Dim_Location"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "ShiftScalar",
            "expression": "MAX([$ShiftScalar])",
            "isHidden": true
          },
          {
            "name": "Warehouse Capacity $",
            "expression": "SUM([$WarehouseCapacity])",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Cycle Time",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "$MISSED_TIME",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MISSED_TIME"
          },
          {
            "name": "$CYCLE_TIME",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CYCLE_TIME"
          },
          {
            "name": "$CAPACITY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CAPACITY"
          },
          {
            "name": "HourID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HourID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "$INDEX_TIME",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "INDEX_TIME",
            "formatString": "0.00"
          },
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "ComponentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ComponentID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "OperatorID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "OperatorID"
          },
          {
            "name": "ReasonID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ReasonID"
          },
          {
            "name": "$MISSED_CYCLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MISSED_CYCLE"
          },
          {
            "name": "$CYCLE_COUNT",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CYCLE_COUNT"
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CurrentShiftID"
          },
          {
            "name": "$EMPTY_CYCLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EMPTY_CYCLE"
          },
          {
            "name": "RecNum",
            "dataType": "int64",
            "sourceColumn": "RecNum"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_CycleTime = Source{[Schema=\"dbo\",Item=\"FactCycleTime\"]}[Data]",
                "in",
                "    Fact_CycleTime"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Machine Capacity Time",
            "expression": "SUM([$CAPACITY])",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "Cycle Time",
            "expression": "SUM([$CYCLE_TIME])",
            "formatString": "#,0.00"
          },
          {
            "name": "Missed Cycle Time",
            "expression": "SUM([$MISSED_TIME])",
            "formatString": "#,0.00"
          },
          {
            "name": "Index Time",
            "expression": "SUM([$INDEX_TIME])",
            "formatString": "#,0.00"
          },
          {
            "name": "Cycle Count",
            "expression": "SUM([$CYCLE_COUNT])",
            "formatString": "#,0"
          },
          {
            "name": "Missed Cycle Count",
            "expression": "SUM([$MISSED_CYCLE])",
            "formatString": "#,0"
          },
          {
            "name": "Round Count",
            "expression": "DIVIDE(SUM([$CYCLE_COUNT]),4)",
            "formatString": "#,0.00"
          },
          {
            "name": "Missed Round Count",
            "expression": " DIVIDE(SUM([$MISSED_CYCLE]),4)",
            "formatString": "#,0"
          },
          {
            "name": "Cumulative Rounds",
            "expression": [
              " CALCULATE (",
              "    SUM('Cycle Time'[$CYCLE_COUNT])/4,",
              "    FILTER (",
              "        ALL ( 'Cycle Time'),",
              "        'Cycle Time'[HourID] <= MAX ( 'Cycle Time'[HourID])",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Empty Cycle Count",
            "expression": "SUM([$EMPTY_CYCLE])",
            "formatString": "#,0"
          },
          {
            "name": "Empty Round Count",
            "expression": " DIVIDE(SUM([$EMPTY_CYCLE]),4)",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Shift Offset",
        "columns": [
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "Shift Offset Name",
            "dataType": "string",
            "sourceColumn": "ShiftOffsetName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_ShiftOffset = Source{[Schema=\"Dim\",Item=\"ShiftOffset\"]}[Data]",
                "in",
                "    Dim_ShiftOffset"
              ]
            }
          }
        ]
      },
      {
        "name": "Hour",
        "columns": [
          {
            "name": "Hour ID",
            "dataType": "int64",
            "sourceColumn": "HourID"
          },
          {
            "name": "Hour Name",
            "dataType": "string",
            "sourceColumn": "HourName",
            "sortByColumn": "Hour Sort"
          },
          {
            "name": "Hour Desc",
            "dataType": "string",
            "sourceColumn": "HourDesc",
            "sortByColumn": "Hour Sort"
          },
          {
            "name": "Hour Sort",
            "dataType": "string",
            "sourceColumn": "HourSort"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Hour = Source{[Schema=\"Dim\",Item=\"Hour\"]}[Data]",
                "in",
                "    Dim_Hour"
              ]
            }
          }
        ]
      },
      {
        "name": "Shift Length",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "MachineTime",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineTime"
          },
          {
            "name": "$ShiftLength",
            "dataType": "int64",
            "sourceColumn": "ShiftLength"
          },
          {
            "name": "$Breaks",
            "dataType": "int64",
            "sourceColumn": "Breaks"
          },
          {
            "name": "DateKey",
            "dataType": "dateTime",
            "sourceColumn": "DateKey"
          },
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "Start_Date_Time",
            "dataType": "dateTime",
            "sourceColumn": "Start_Date_Time"
          },
          {
            "name": "End_Date_Time",
            "dataType": "dateTime",
            "sourceColumn": "End_Date_Time"
          },
          {
            "name": "Holiday",
            "dataType": "boolean",
            "sourceColumn": "Holiday"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_ShiftLength = Source{[Schema=\"dbo\",Item=\"FactShiftLength\"]}[Data]",
                "in",
                "    Fact_ShiftLength"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "ShiftLength",
            "expression": "SUM([$ShiftLength])",
            "isHidden": true
          },
          {
            "name": "Breaks",
            "expression": "SUM([$Breaks])",
            "formatString": "0"
          }
        ]
      },
      {
        "name": "Standards",
        "columns": [
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "Machine",
            "dataType": "string",
            "sourceColumn": "Machine"
          },
          {
            "name": "MachineHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineHours"
          },
          {
            "name": "MachineRate",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineRate"
          },
          {
            "name": "MachineCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MachineCost"
          },
          {
            "name": "LaborRate",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "LaborRate"
          },
          {
            "name": "RotoOperHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "RotoOperHours"
          },
          {
            "name": "RotoFloatHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "RotoFloatHours"
          },
          {
            "name": "TotalRotoHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalRotoHours"
          },
          {
            "name": "TotalRotoCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalRotoCost"
          },
          {
            "name": "AssyLaborHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "AssyLaborHours"
          },
          {
            "name": "AssyLeadHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "AssyLeadHours"
          },
          {
            "name": "TotalAssyHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalAssyHours"
          },
          {
            "name": "TotalAssyCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalAssyCost"
          },
          {
            "name": "TotalProcessingCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalProcessingCost"
          },
          {
            "name": "TotalStandardHours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TotalStandardHours"
          },
          {
            "name": "UnitsPerSpider",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UnitsPerSpider"
          },
          {
            "name": "SpidersPerUnit",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SpidersPerUnit"
          },
          {
            "name": "RoundsPerShift",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "RoundsPerShift"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "ItemCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ItemCost"
          },
          {
            "name": "MaterialCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MaterialCost"
          },
          {
            "name": "MaterialOverheadCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MaterialOverheadCost"
          },
          {
            "name": "ResourceCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ResourceCost"
          },
          {
            "name": "OutsideProcessingCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OutsideProcessingCost"
          },
          {
            "name": "OverheadCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OverheadCost"
          },
          {
            "name": "StartDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "StartDate"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "EndDate"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Standards = Source{[Schema=\"dbo\",Item=\"FactStandard\"]}[Data]",
                "in",
                "    Fact_Standards"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Assembly Lead Hours $",
            "expression": "MAX([AssyLeadHours])",
            "isHidden": true
          },
          {
            "name": "Total Roto Cost $",
            "expression": "MAX([TotalRotoCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Assembly Hours $",
            "expression": "MAX([TotalAssyHours])",
            "isHidden": true
          },
          {
            "name": "Roto Operator Hours $",
            "expression": "MAX([RotoOperHours])",
            "isHidden": true
          },
          {
            "name": "Machine Rate $",
            "expression": "MAX([MachineRate])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Cost $",
            "expression": "MAX([MachineCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Processing Cost $",
            "expression": "MAX([TotalProcessingCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Roto Float Hours $",
            "expression": "MAX([RotoFloatHours])",
            "isHidden": true
          },
          {
            "name": "Assembly Labor Hours $",
            "expression": "MAX([AssyLaborHours])",
            "isHidden": true
          },
          {
            "name": "Standard Machine Hours $",
            "expression": "MAX([MachineHours])",
            "isHidden": true
          },
          {
            "name": "Labor Rate $",
            "expression": "MAX([LaborRate])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Roto Hours $",
            "expression": "MAX([TotalRotoHours])",
            "isHidden": true
          },
          {
            "name": "Total Assembly Cost $",
            "expression": "MAX([TotalAssyCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Standard Hours $",
            "expression": "MAX([TotalStandardHours])",
            "isHidden": true
          },
          {
            "name": "Machine Hours $",
            "expression": "MAX([MachineHours])",
            "isHidden": true
          },
          {
            "name": "Units Per Spider $",
            "expression": "MAX([UnitsPerSpider])",
            "formatString": "0.00",
            "isHidden": true
          },
          {
            "name": "Spiders Per Unit $",
            "expression": "MAX([SpidersPerUnit])",
            "formatString": "0.00",
            "isHidden": true
          },
          {
            "name": "Item Cost $",
            "expression": "MAX([ItemCost])",
            "isHidden": true
          },
          {
            "name": "Material Cost $",
            "expression": "MAX([MaterialCost])",
            "isHidden": true
          },
          {
            "name": "Material Overhead Cost $",
            "expression": "MAX([MaterialOverheadCost])",
            "isHidden": true
          },
          {
            "name": "Outside Processing Cost $",
            "expression": "MAX([OutsideProcessingCost])",
            "isHidden": true
          },
          {
            "name": "Overhead Cost $",
            "expression": "MAX([OverheadCost])",
            "isHidden": true
          },
          {
            "name": "Resource Cost $",
            "expression": "MAX([ResourceCost])",
            "isHidden": true
          },
          {
            "name": "Machine Size $",
            "expression": "MAX([Machine])",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Component",
        "columns": [
          {
            "name": "ComponentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "SKU",
            "dataType": "string",
            "sourceColumn": "ProductKey"
          },
          {
            "name": "SKU Name",
            "dataType": "string",
            "sourceColumn": "ProductName"
          },
          {
            "name": "SKU: Name",
            "dataType": "string",
            "sourceColumn": "ProductDesc"
          },
          {
            "name": "Product Sort",
            "dataType": "string",
            "sourceColumn": "ProductSort"
          },
          {
            "name": "UOM",
            "dataType": "string",
            "sourceColumn": "UOM"
          },
          {
            "name": "Item Type",
            "dataType": "string",
            "sourceColumn": "Item Type"
          },
          {
            "name": "SIOP Family",
            "dataType": "string",
            "sourceColumn": "SIOP Family"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          },
          {
            "name": "Sub Category",
            "dataType": "string",
            "sourceColumn": "SubCategory"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand"
          },
          {
            "name": "Inventory Status Code",
            "dataType": "string",
            "sourceColumn": "Inventory Status Code"
          },
          {
            "name": "Country of Origin",
            "dataType": "string",
            "sourceColumn": "Country of Origin"
          },
          {
            "name": "Part Class",
            "dataType": "string",
            "sourceColumn": "Part Class"
          },
          {
            "name": "Make Buy",
            "dataType": "string",
            "sourceColumn": "MakeBuy"
          },
          {
            "name": "Contract Manufacturing",
            "dataType": "string",
            "sourceColumn": "Contract Manufacturing"
          },
          {
            "name": "Channel",
            "dataType": "string",
            "sourceColumn": "Channel"
          },
          {
            "name": "Part Type",
            "dataType": "string",
            "sourceColumn": "Part Type"
          },
          {
            "name": "Product Volume",
            "dataType": "double",
            "sourceColumn": "Product Volume"
          },
          {
            "name": "4 Digit",
            "dataType": "string",
            "sourceColumn": "4 Digit"
          },
          {
            "name": "CategoryType",
            "dataType": "string",
            "sourceColumn": "CategoryType"
          },
          {
            "name": "IMAP",
            "dataType": "string",
            "sourceColumn": "IMAP"
          },
          {
            "name": "NPD",
            "dataType": "string",
            "sourceColumn": "NPD"
          },
          {
            "name": "List Price",
            "dataType": "decimal",
            "sourceColumn": "List Price"
          },
          {
            "name": "Royalty License Name",
            "dataType": "string",
            "sourceColumn": "Royalty License Name"
          },
          {
            "name": "Shipping Method",
            "dataType": "string",
            "sourceColumn": "Shipping Method"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_ProductMaster = Source{[Schema=\"dbo\",Item=\"DimProductMaster\"]}[Data]",
                "in",
                "    Dim_ProductMaster"
              ]
            }
          }
        ]
      },
      {
        "name": "Missed Cycle Reason",
        "columns": [
          {
            "name": "ReasonID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ReasonID"
          },
          {
            "name": "Reason Code",
            "dataType": "int64",
            "sourceColumn": "ReasonKey"
          },
          {
            "name": "Reason Name",
            "dataType": "string",
            "sourceColumn": "ReasonName"
          },
          {
            "name": "Reason Desc",
            "dataType": "string",
            "sourceColumn": "ReasonDesc"
          },
          {
            "name": "ReasonCategory",
            "dataType": "string",
            "sourceColumn": "ReasonCategory"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_CycleReason = Source{[Schema=\"Dim\",Item=\"CycleReason\"]}[Data]",
                "in",
                "    Dim_CycleReason"
              ]
            }
          }
        ]
      },
      {
        "name": "Machine Operator",
        "columns": [
          {
            "name": "OperatorID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "OperatorID"
          },
          {
            "name": "Operator Name",
            "dataType": "string",
            "sourceColumn": "OperatorName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    dbo_DimMachineOperator = Source{[Schema=\"dbo\",Item=\"DimMachineOperator\"]}[Data]",
                "in",
                "    dbo_DimMachineOperator"
              ]
            }
          }
        ]
      },
      {
        "name": "Shift Hours",
        "columns": [
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "Hours",
            "dataType": "double",
            "sourceColumn": "Hours"
          },
          {
            "name": "ShiftOffsetID",
            "dataType": "int64",
            "sourceColumn": "ShiftOffsetID"
          },
          {
            "name": "Start_Date_Time",
            "dataType": "dateTime",
            "sourceColumn": "Start_Date_Time"
          },
          {
            "name": "End_Date_Time",
            "dataType": "dateTime",
            "sourceColumn": "End_Date_Time"
          },
          {
            "name": "TransDate",
            "dataType": "dateTime",
            "sourceColumn": "TransDate"
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "sourceColumn": "CurrentShiftID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_ShiftHours = Source{[Schema=\"dbo\",Item=\"FactShiftHours\"]}[Data]",
                "in",
                "    Fact_ShiftHours"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Shift Hours",
            "expression": "SUM([Hours])",
            "formatString": "0"
          }
        ]
      },
      {
        "name": "Shift Control",
        "columns": [
          {
            "name": "ShiftControlID",
            "dataType": "int64",
            "sourceColumn": "ShiftControlID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "sourceColumn": "LocationID"
          },
          {
            "name": "CurrentShiftID",
            "dataType": "int64",
            "sourceColumn": "CurrentShiftID"
          },
          {
            "name": "Shift Name",
            "dataType": "string",
            "sourceColumn": "ShiftName"
          },
          {
            "name": "Shift Hour Block 1",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock1"
          },
          {
            "name": "Shift Hour Block 2",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock2"
          },
          {
            "name": "Shift Hour Block 3",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock3"
          },
          {
            "name": "Shift Hour Block 4",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock4"
          },
          {
            "name": "Shift Hour Block 5",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock5"
          },
          {
            "name": "Shift Hour Block 6",
            "dataType": "string",
            "sourceColumn": "ShiftHourBlock6"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_ShiftControl = Source{[Schema=\"Dim\",Item=\"ShiftControl\"]}[Data]",
                "in",
                "    Dim_ShiftControl"
              ]
            }
          }
        ]
      },
      {
        "name": "Weekly Goal",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "$ProductionDays",
            "dataType": "double",
            "sourceColumn": "ProductionDays"
          },
          {
            "name": "$MachineCount",
            "dataType": "double",
            "sourceColumn": "MachineCount"
          },
          {
            "name": "$NSP",
            "dataType": "decimal",
            "sourceColumn": "NSP"
          },
          {
            "name": "$Cost",
            "dataType": "decimal",
            "sourceColumn": "Cost"
          },
          {
            "name": "$MachineCountBudget",
            "dataType": "double",
            "sourceColumn": "MachineCountBudget"
          },
          {
            "name": "$NSPBudget",
            "dataType": "decimal",
            "sourceColumn": "NSPBudget"
          },
          {
            "name": "$CostBudget",
            "dataType": "decimal",
            "sourceColumn": "CostBudget"
          },
          {
            "name": "$Scrap",
            "dataType": "double",
            "sourceColumn": "Scrap"
          },
          {
            "name": "$Repair",
            "dataType": "double",
            "sourceColumn": "Repair"
          },
          {
            "name": "$MissedCycle",
            "dataType": "double",
            "sourceColumn": "MissedCycle"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_WeeklyGoal = Source{[Schema=\"Fact\",Item=\"WeeklyGoal\"]}[Data]",
                "in",
                "    Fact_WeeklyGoal"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Weekly Forecast (NSP)",
            "expression": "SUM([$NSP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "DOR",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "$Added Overtime Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Added Overtime Hours"
          },
          {
            "name": "$Added Overtime Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Added Overtime Heads"
          },
          {
            "name": "$Assembly Overtime Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Overtime Hours"
          },
          {
            "name": "$Assembly Overtime Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Overtime Heads"
          },
          {
            "name": "$Roto Overtime Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Overtime Hours"
          },
          {
            "name": "$Roto Overtime Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Overtime Heads"
          },
          {
            "name": "$Total Training Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Training Hours"
          },
          {
            "name": "$Total Training Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Training Heads"
          },
          {
            "name": "$Assembly Training Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Training HOurs"
          },
          {
            "name": "$Assembly Training Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Training Heads"
          },
          {
            "name": "$Roto Training Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Training Hours"
          },
          {
            "name": "$Roto Training Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Training Heads"
          },
          {
            "name": "$Assembly Total Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Total Hours"
          },
          {
            "name": "$Assembly Total Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Total Heads"
          },
          {
            "name": "$Assembly Line Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Line Hours"
          },
          {
            "name": "$Assembly Line Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Line Heads"
          },
          {
            "name": "$Cell Lead Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Cell Lead Hours"
          },
          {
            "name": "$Cell Lead Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Cell Lead Heads"
          },
          {
            "name": "$Janitor Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Janitor Hours"
          },
          {
            "name": "$Janitor Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Janitor Heads"
          },
          {
            "name": "$Assembly Trainee Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Trainee Hours"
          },
          {
            "name": "$Assembly Trainee Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Trainee Heads"
          },
          {
            "name": "$Assembly Trainer Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Trainer Hours"
          },
          {
            "name": "$Assembly Trainer Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Trainer Heads"
          },
          {
            "name": "$Other Direct Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Other Direct Horus"
          },
          {
            "name": "$Other Direct Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Other Direct Heads"
          },
          {
            "name": "$Assembly Light Duty Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Light Duty Hours"
          },
          {
            "name": "$Aseembly Light Duty Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Aseembly Light Duty Heads"
          },
          {
            "name": "$Roto Total Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Total Hours"
          },
          {
            "name": "$Roto Total Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Total Heads"
          },
          {
            "name": "$Roto Machine Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Machine Hours"
          },
          {
            "name": "$Roto Machine Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Machine Heads"
          },
          {
            "name": "$Roto Float Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Float Hours"
          },
          {
            "name": "$Roto Float Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Float Heads"
          },
          {
            "name": "$Roto Trainee Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Trainee Hours"
          },
          {
            "name": "$Roto Trainee Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Trainee Heads"
          },
          {
            "name": "$Roto Trainer Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Trainer Hours"
          },
          {
            "name": "$Roto Trainer Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Trainer Heads"
          },
          {
            "name": "$Power Room Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Power Room Hours"
          },
          {
            "name": "$Power Room Heads",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Power Room Heads"
          },
          {
            "name": "$Mold Changes",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Mold Changes"
          },
          {
            "name": "$Spiders Removed",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Removed"
          },
          {
            "name": "$Spiders Added",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Added"
          },
          {
            "name": "$Version Changes",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Version Changes"
          },
          {
            "name": "$Number of SKUs Ran",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Number of SKUs Ran"
          },
          {
            "name": "$Total Empty Spaces",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Empty Spaces"
          },
          {
            "name": "$Empty Spaces 190",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Empty Spaces 190"
          },
          {
            "name": "$Empty Spaces 220",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Empty Spaces 220"
          },
          {
            "name": "$Empty Spaces 280",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Empty Spaces 280"
          },
          {
            "name": "$Empty Spaces 110",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Empty Spaces 110"
          },
          {
            "name": "$Spiders Ran 190",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Ran 190"
          },
          {
            "name": "$Spiders Ran 220",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Ran 220"
          },
          {
            "name": "$Spiders Ran 280",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Ran 280"
          },
          {
            "name": "$Spiders Ran 110",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spiders Ran 110"
          },
          {
            "name": "$Assembly Call Off Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Assembly Call Off Hours"
          },
          {
            "name": "$Roto Call Off Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Roto Call Off Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_DOR = Source{[Schema=\"Fact\",Item=\"DOR\"]}[Data]",
                "in",
                "    Fact_DOR"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Added Overtime Heads",
            "expression": "SUM([$Added Overtime Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Added Overtime Hours",
            "expression": "SUM([$Added Overtime Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Aseembly Light Duty Heads",
            "expression": "SUM([$Aseembly Light Duty Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Call Off Hours",
            "expression": "SUM([$Assembly Call Off Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Light Duty Hours",
            "expression": "SUM([$Assembly Light Duty Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Line Heads",
            "expression": "SUM([$Assembly Line Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Line Hours",
            "expression": "SUM([$Assembly Line Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Overtime Heads",
            "expression": "SUM([$Assembly Overtime Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Overtime Hours",
            "expression": "SUM([$Assembly Overtime Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Total Heads",
            "expression": "SUM([$Assembly Total Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Total Hours",
            "expression": "SUM([$Assembly Total Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Trainee Heads",
            "expression": "SUM([$Assembly Trainee Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Trainee Hours",
            "expression": "SUM([$Assembly Trainee Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Trainer Heads",
            "expression": "SUM([$Assembly Trainer Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Trainer Hours",
            "expression": "SUM([$Assembly Trainer Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Assembly Training Heads",
            "expression": "SUM([$Assembly Training Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Assembly Training Hours",
            "expression": "SUM([$Assembly Training Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Cell Lead Heads",
            "expression": "SUM([$Cell Lead Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Cell Lead Hours",
            "expression": "SUM([$Cell Lead Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Empty Spaces 110",
            "expression": "SUM([$Empty Spaces 110])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Empty Spaces 190",
            "expression": "SUM([$Empty Spaces 190])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Empty Spaces 220",
            "expression": "SUM([$Empty Spaces 220])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Empty Spaces 280",
            "expression": "SUM([$Empty Spaces 280])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Janitor Heads",
            "expression": "SUM([$Janitor Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Janitor Hours",
            "expression": "SUM([$Janitor Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Mold Changes",
            "expression": "SUM([$Mold Changes])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Other Direct Heads",
            "expression": "SUM([$Other Direct Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Other Direct Hours",
            "expression": "SUM([$Other Direct Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Power Room Heads",
            "expression": "SUM([$Power Room Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Power Room Hours",
            "expression": "SUM([$Power Room Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Call Off Hours",
            "expression": "SUM([$Roto Call Off Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "RotoFloat Heads",
            "expression": "SUM([$Roto Float Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "RotoFloat Hours",
            "expression": "SUM([$Roto Float Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Machine Heads",
            "expression": "SUM([$Roto Machine Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Machine Hours",
            "expression": "SUM([$Roto Machine Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Overtime Heads",
            "expression": "SUM([$Roto Overtime Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Overtime Hours",
            "expression": "SUM([$Roto Overtime Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Total Heads",
            "expression": "SUM([$Roto Total Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Total Hours",
            "expression": "SUM([$Roto Total Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Trainee Heads",
            "expression": "SUM([$Roto Trainee Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Trainee Hours",
            "expression": "SUM([$Roto Trainee Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Trainer Heads",
            "expression": "SUM([$Roto Trainer Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Trainer Hours",
            "expression": "SUM([$Roto Trainer Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Roto Training Heads",
            "expression": "SUM([$Roto Training Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Roto Training Hours",
            "expression": "SUM([$Roto Training Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Spiders Added",
            "expression": "SUM([$Spiders Added])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Spiders Ran 110",
            "expression": "SUM([$Spiders Ran 110])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Spiders Ran 190",
            "expression": "SUM([$Spiders Ran 190])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Spiders Ran 220",
            "expression": "SUM([$Spiders Ran 220])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Spiders Ran 280",
            "expression": "SUM([$Spiders Ran 280])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Spiders Removed",
            "expression": "SUM([$Spiders Removed])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Total Empty Spaces",
            "expression": "SUM([$Total Empty Spaces])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          },
          {
            "name": "Total Training Heads",
            "expression": "SUM([$Total Training Heads])",
            "formatString": "#,0.0",
            "displayFolder": "Heads"
          },
          {
            "name": "Total Training Hours",
            "expression": "SUM([$Total Training Hours])",
            "formatString": "#,0.0",
            "displayFolder": "Hours"
          },
          {
            "name": "Version Changes",
            "expression": "SUM([$Version Changes])",
            "formatString": "#,0",
            "displayFolder": "Machine"
          }
        ]
      },
      {
        "name": "Account",
        "columns": [
          {
            "name": "Account ID",
            "dataType": "string",
            "sourceColumn": "AccountID"
          },
          {
            "name": "Account Name",
            "dataType": "string",
            "sourceColumn": "AccountName"
          },
          {
            "name": "Account Description",
            "dataType": "string",
            "sourceColumn": "AccountDescription"
          },
          {
            "name": "Account Combo",
            "dataType": "string",
            "sourceColumn": "AccountCombo"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_AccountOverhead = Source{[Schema=\"Dim\",Item=\"AccountOverhead\"]}[Data]",
                "in",
                "    Dim_AccountOverhead"
              ]
            }
          }
        ]
      },
      {
        "name": "Overhead",
        "columns": [
          {
            "name": "Location ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "GL Location ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GLLocationID"
          },
          {
            "name": "Account ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "AccountID"
          },
          {
            "name": "Account Combo",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "AccountCombo"
          },
          {
            "name": "Date ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "Actual",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Actual"
          },
          {
            "name": "Budget",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Budget"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Overhead = Source{[Schema=\"Fact\",Item=\"Overhead\"]}[Data]",
                "in",
                "    Fact_Overhead"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Overhead Actual",
            "expression": "SUM([Actual])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Overhead Budget",
            "expression": "SUM([Budget])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Employee",
        "columns": [
          {
            "name": "EmployeeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EmployeeID"
          },
          {
            "name": "Employee ID",
            "dataType": "string",
            "sourceColumn": "Employee ID"
          },
          {
            "name": "Primary Job",
            "dataType": "string",
            "sourceColumn": "Primary Job"
          },
          {
            "name": "Schedule Group Assignment Name",
            "dataType": "string",
            "sourceColumn": "Schedule Group Assignment Name"
          },
          {
            "name": "Accrual Profile Name",
            "dataType": "string",
            "sourceColumn": "Accrual Profile Name"
          },
          {
            "name": "Employee Type",
            "dataType": "string",
            "sourceColumn": "Employee Type"
          },
          {
            "name": "Employee Full Name",
            "dataType": "string",
            "sourceColumn": "Employee Full Name"
          },
          {
            "name": "Hire Date",
            "dataType": "dateTime",
            "sourceColumn": "Hire Date"
          },
          {
            "name": "Date Terminated",
            "dataType": "dateTime",
            "sourceColumn": "Date Terminated"
          },
          {
            "name": "Termination Reason",
            "dataType": "string",
            "sourceColumn": "Termination Reason"
          },
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "LocationKey"
          },
          {
            "name": "Job",
            "dataType": "string",
            "sourceColumn": "Job"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "Department"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "ShiftName",
            "dataType": "string",
            "sourceColumn": "ShiftName"
          },
          {
            "name": "Primary Location",
            "dataType": "string",
            "sourceColumn": "Primary Location"
          },
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "sourceColumn": "ShiftID"
          },
          {
            "name": "Tenure",
            "dataType": "int64",
            "sourceColumn": "Tenure"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_Employee = Source{[Schema=\"dbo\",Item=\"DimEmployee\"]}[Data]",
                "in",
                "    Dim_Employee"
              ]
            }
          }
        ]
      },
      {
        "name": "Labor",
        "columns": [
          {
            "name": "EmployeeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EmployeeID"
          },
          {
            "name": "PaycodeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PaycodeID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "$Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Hours"
          },
          {
            "name": "$Wages",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Wages"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHiftID"
          },
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "LaborCategoryID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LaborCategoryID"
          },
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Labor = Source{[Schema=\"dbo\",Item=\"FactLabor\"]}[Data]",
                "in",
                "    Fact_Labor"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Labor Wages",
            "expression": "SUM([$Wages])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Labor Hours",
            "expression": "SUM([$Hours])",
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Paycode",
        "columns": [
          {
            "name": "PayCodeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PayCodeID"
          },
          {
            "name": "Paycode Category",
            "dataType": "string",
            "sourceColumn": "PaycodeCategory"
          },
          {
            "name": "Paycode Name",
            "dataType": "string",
            "sourceColumn": "PayCode Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_PayCode = Source{[Schema=\"Dim\",Item=\"PayCode\"]}[Data]",
                "in",
                "    Dim_PayCode"
              ]
            }
          }
        ]
      },
      {
        "name": "Headcount",
        "columns": [
          {
            "name": "EmployeeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EmployeeID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "HireEmployeeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Hire"
          },
          {
            "name": "TermEmployeeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Term"
          },
          {
            "name": "HeadcountTypeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HeadcountTypeID"
          },
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "Tenure",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Tenure"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Headcount = Source{[Schema=\"Fact\",Item=\"Headcount\"]}[Data]",
                "in",
                "    Fact_Headcount"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "$Hire",
            "expression": "DISTINCTCOUNTNOBLANK([HireEmployeeID])",
            "isHidden": true
          },
          {
            "name": "$Term",
            "expression": "DISTINCTCOUNTNOBLANK([TermEmployeeID])",
            "isHidden": true
          },
          {
            "name": "$Tenure",
            "expression": "SUM([Tenure])",
            "formatString": "0",
            "isHidden": true
          },
          {
            "name": "Distinct Headcount",
            "expression": "DISTINCTCOUNT([EmployeeID])"
          }
        ]
      },
      {
        "name": "Headcount Type",
        "columns": [
          {
            "name": "HeadcountTypeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HeadcountTypeID"
          },
          {
            "name": "Headcount Type",
            "dataType": "string",
            "sourceColumn": "HeadcountTypeName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_HeadcountType = Source{[Schema=\"Dim\",Item=\"HeadcountType\"]}[Data]",
                "in",
                "    Dim_HeadcountType"
              ]
            }
          }
        ]
      },
      {
        "name": "Labor Category",
        "columns": [
          {
            "name": "LaborCategoryID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LaborCategoryID"
          },
          {
            "name": "Labor Category Name",
            "dataType": "string",
            "sourceColumn": "LaborCategoryName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_LaborCategory = Source{[Schema=\"dbo\",Item=\"DimLaborCategory\"]}[Data]",
                "in",
                "    Dim_LaborCategory"
              ]
            }
          }
        ]
      },
      {
        "name": "Department",
        "columns": [
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "Department Key",
            "dataType": "string",
            "sourceColumn": "DepartmentKey"
          },
          {
            "name": "Labor Type",
            "dataType": "string",
            "sourceColumn": "LaborType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Dim_LaborDepartment = Source{[Schema=\"dbo\",Item=\"DimLaborDepartment\"]}[Data]",
                "in",
                "    Dim_LaborDepartment"
              ]
            }
          }
        ]
      },
      {
        "name": "Plan",
        "columns": [
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "DemandClassID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DemandClassID"
          },
          {
            "name": "InventoryCodeID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "InventoryCodeID"
          },
          {
            "name": "InventoryStatusID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "InventoryStatusID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "Inventory Type ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "InventoryTypeID"
          },
          {
            "name": "Sale Price",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Sale Price"
          },
          {
            "name": "Average Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Average Cost"
          },
          {
            "name": "Inventory Cost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Inventory Cost"
          },
          {
            "name": "Quantity",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Quantity"
          },
          {
            "name": "Machine Hours",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_Plan = Source{[Schema=\"dbo\",Item=\"FactPlan\"]}[Data]",
                "in",
                "    Fact_Plan"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Plan Quantity",
            "expression": "SUM([Quantity])",
            "isHidden": true
          },
          {
            "name": "Plan Machine Hours",
            "expression": "SUM([Machine Hours])",
            "isHidden": true
          }
        ]
      },
      {
        "name": "Resin QA",
        "columns": [
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "HourID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HourID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "ComponentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ComponentID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "BOM_Resin",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BOM_Resin"
          },
          {
            "name": "Actual_Resin",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Actual_Resin"
          },
          {
            "name": "UserID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UserID"
          },
          {
            "name": "COMMENTS",
            "dataType": "string",
            "sourceColumn": "COMMENTS"
          },
          {
            "name": "Variance_Resin",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Variance_Resin"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "SampleID",
            "dataType": "int64",
            "sourceColumn": "SampleID"
          },
          {
            "name": "Variance_Bucket",
            "dataType": "string",
            "sourceColumn": "Variance_Bucket"
          },
          {
            "name": "Percent_Resin",
            "dataType": "double",
            "sourceColumn": "Percent_Resin"
          },
          {
            "name": "Percent_Bucket",
            "dataType": "string",
            "sourceColumn": "Percent_Bucket"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_RotoResinQA = Source{[Schema=\"Fact\",Item=\"RotoResinQA\"]}[Data]",
                "in",
                "    Fact_RotoResinQA"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Resin Actual",
            "expression": "SUM([Actual_Resin])",
            "formatString": "#,0.00"
          },
          {
            "name": "Resin BOM",
            "expression": "SUM([BOM_Resin])",
            "formatString": "#,0.00"
          },
          {
            "name": "Resin Variance",
            "expression": "SUM([Variance_Resin])",
            "formatString": "#,0.00"
          },
          {
            "name": "Resin Sample Size",
            "expression": "COUNTA([SampleID])",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Checklist QA",
        "columns": [
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "MachineID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MachineID"
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductID"
          },
          {
            "name": "DateID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateID"
          },
          {
            "name": "SaveDate",
            "dataType": "dateTime",
            "sourceColumn": "SaveDate"
          },
          {
            "name": "TEST_NUMBER",
            "dataType": "int64",
            "sourceColumn": "TEST_NUMBER"
          },
          {
            "name": "CHECK_NUMBER",
            "dataType": "string",
            "sourceColumn": "CHECK_NUMBER"
          },
          {
            "name": "Test",
            "dataType": "string",
            "sourceColumn": "Test"
          },
          {
            "name": "CHECK_VALUE",
            "dataType": "string",
            "sourceColumn": "CHECK_VALUE"
          },
          {
            "name": "INSPECTOR",
            "dataType": "string",
            "sourceColumn": "INSPECTOR"
          },
          {
            "name": "RESULTS_COMMENTS",
            "dataType": "string",
            "sourceColumn": "RESULTS_COMMENTS"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_ChecklistQA = Source{[Schema=\"Fact\",Item=\"ChecklistQA\"]}[Data]",
                "in",
                "    Fact_ChecklistQA"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Distinct Count of CHECK_NUMBER",
            "expression": "DISTINCTCOUNT([CHECK_NUMBER])"
          }
        ]
      },
      {
        "name": "Headcount Target",
        "columns": [
          {
            "name": "PlantID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PlantID"
          },
          {
            "name": "ShiftID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShiftID"
          },
          {
            "name": "DepartmentID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DepartmentID"
          },
          {
            "name": "$HeadcountTarget",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Headcount"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_HeadcountTarget = Source{[Schema=\"Fact\",Item=\"HeadcountTarget\"]}[Data]",
                "in",
                "    Fact_HeadcountTarget"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Headcount Target",
            "expression": "SUM([$HeadcountTarget])"
          }
        ]
      },
      {
        "name": "Budget",
        "columns": [
          {
            "name": "WeekID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "WeekID"
          },
          {
            "name": "LocationID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocationID"
          },
          {
            "name": "$Production $ Budget (Cost) - TOYS",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Production $ Budget (Cost) - TOYS"
          },
          {
            "name": "$Production $ Budget (Cost) - Custom",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Production $ Budget (Cost) - Custom"
          },
          {
            "name": "$Machine Hrs (Budget) - TOYS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Hrs (Budget) - TOYS"
          },
          {
            "name": "$Machine Hrs (Budget) -Custom",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Machine Hrs (Budget) -Custom"
          },
          {
            "name": "$Labor Earned OH",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Labor Earned OH"
          },
          {
            "name": "$Mfg. Earned OH",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Mfg. Earned OH"
          },
          {
            "name": "$Purchased OH Earned",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Purchased OH Earned"
          },
          {
            "name": "$Total Overhead Earned",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Total Overhead Earned"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/ ;Operations\",",
                "    Fact_ProductionBudget = Source{[Schema=\"Fact\",Item=\"ProductionBudget\"]}[Data]",
                "in",
                "    Fact_ProductionBudget"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Labor Earned OH",
            "expression": "SUM([$Labor Earned OH])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Hrs (Budget) - TOYS",
            "expression": "SUM([$Machine Hrs (Budget) - TOYS])"
          },
          {
            "name": "Machine Hrs (Budget) - Custom",
            "expression": "SUM([$Machine Hrs (Budget) -Custom])"
          },
          {
            "name": "Mfg. Earned OH",
            "expression": "SUM([$Mfg. Earned OH])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production $ Budget (Cost) - Custom",
            "expression": "SUM([$Production $ Budget (Cost) - Custom])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Production $ Budget (Cost) - TOYS",
            "expression": "SUM([$Production $ Budget (Cost) - TOYS])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Purchased OH Earned",
            "expression": "SUM([$Purchased OH Earned])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Overhead Earned",
            "expression": "SUM([$Total Overhead Earned])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "bd77b3a9-5b42-4420-a944-364bdc0a9203",
        "fromTable": "Production",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "0e9bc817-5c8f-4a90-abe1-1763b42e1c89",
        "fromTable": "Production",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "53b47193-6341-46cd-a7db-a3d90fb9c151",
        "fromTable": "Production",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "c8a13051-9e9c-4fd1-911c-11ed31839af8",
        "fromTable": "Scrap",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "c3d893b0-1bb5-470d-8f81-12ad329f5ec8",
        "fromTable": "Scrap",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "3eb8c2a5-8dd4-471c-9377-56c7cdcbed7f",
        "fromTable": "Scrap",
        "fromColumn": "RepairID",
        "toTable": "Repair",
        "toColumn": "Repair ID"
      },
      {
        "name": "d273b61b-1552-4a58-be2e-c052db2f2b7f",
        "fromTable": "Scrap",
        "fromColumn": "RepairReasonID",
        "toTable": "Repair Reason",
        "toColumn": "Repair Reason ID"
      },
      {
        "name": "71780436-9d63-4fcb-9d43-1c2cb6ee1ca6",
        "fromTable": "Goal",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "fe124877-f465-4977-aa48-71f5fbde136a",
        "fromTable": "Machine Goal",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "e5230f20-897e-4cd7-83e4-43fcfff15b70",
        "fromTable": "Time Series Bridge",
        "fromColumn": "TimeSeriesID",
        "toTable": "Time Series",
        "toColumn": "Time Series ID"
      },
      {
        "name": "e8aa2b05-090f-482d-b0ad-8e3cb8789a64",
        "fromTable": "Time Series Bridge",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "771fdf72-33da-4e4e-b7d5-db6e9682ca55",
        "fromTable": "Scrap",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "03a2bab2-0e49-426e-8d03-19ecc73d447b",
        "fromTable": "Scrap",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "e5814500-4c83-416c-a6a2-bcfefa767f37",
        "fromTable": "Production",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "692af35e-561a-4cac-b10f-fecf66e2626a",
        "fromTable": "Production",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "9a481d80-f206-4325-8acb-18c27beafa8a",
        "fromTable": "Scrap",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "66c3af2f-e643-434a-b8e8-6ad443c463d2",
        "fromTable": "Goal",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "217d705b-c35b-4e41-a490-790355568231",
        "fromTable": "Cycle Time",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "c3db58f4-a6f6-4a66-a178-36d15075b028",
        "fromTable": "Cycle Time",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "5cc55b8e-1f73-4dc0-8563-f5af14ae77b2",
        "fromTable": "Cycle Time",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "2f1e3cc8-3497-47bd-afb6-f4ccd84f89e4",
        "fromTable": "Scrap",
        "fromColumn": "ShiftOffsetID",
        "toTable": "Shift Offset",
        "toColumn": "ShiftOffsetID"
      },
      {
        "name": "0b72a46c-de66-4d00-9b35-01cd506132eb",
        "fromTable": "Production",
        "fromColumn": "ShiftOffsetID",
        "toTable": "Shift Offset",
        "toColumn": "ShiftOffsetID"
      },
      {
        "name": "a0467271-75a6-4410-b6e7-d31be6c31cc7",
        "fromTable": "Cycle Time",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "0c27ed2a-8603-4d39-ad77-958b5fefb348",
        "fromTable": "Cycle Time",
        "fromColumn": "HourID",
        "toTable": "Hour",
        "toColumn": "Hour ID"
      },
      {
        "name": "ac884551-f03f-4063-b647-15a8d8d5750e",
        "fromTable": "Production",
        "fromColumn": "HourID",
        "toTable": "Hour",
        "toColumn": "Hour ID"
      },
      {
        "name": "9fbe1ace-f642-48c6-9618-bcc620bcc076",
        "fromTable": "Scrap",
        "fromColumn": "HourID",
        "toTable": "Hour",
        "toColumn": "Hour ID"
      },
      {
        "name": "cf55b110-bd06-4e1f-8405-d266217a2e9c",
        "fromTable": "Shift Length",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "d2b5a066-92c9-4a27-b1e7-5b349da24ae1",
        "fromTable": "Shift Length",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "20d5ff7b-ea7d-4023-9a70-6ea9ea3c18ff",
        "fromTable": "Shift Length",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "6d26a396-2f88-4c8e-a432-52707857f103",
        "fromTable": "Shift Length",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "a93cbea7-ba4d-4e57-b275-36fc6b5c70cf",
        "fromTable": "Standards",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "a346c91d-e175-4f26-97a8-2028d2ae6cec",
        "fromTable": "Standards",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "ba69e596-9763-48cb-a9c0-517c0b0bf7a8",
        "fromTable": "Cycle Time",
        "fromColumn": "ShiftOffsetID",
        "toTable": "Shift Offset",
        "toColumn": "ShiftOffsetID"
      },
      {
        "name": "f7b4b3ce-617f-48b7-a15a-172ab5bb5021",
        "fromTable": "Scrap",
        "fromColumn": "ComponentID",
        "toTable": "Component",
        "toColumn": "ComponentID"
      },
      {
        "name": "849cfa26-5350-4e9d-8df7-4ecc1d348340",
        "fromTable": "Production",
        "fromColumn": "ComponentID",
        "toTable": "Component",
        "toColumn": "ComponentID"
      },
      {
        "name": "d3b414a8-1c43-48a6-a0e3-94b2425afe44",
        "fromTable": "Shift Length",
        "fromColumn": "ShiftOffsetID",
        "toTable": "Shift Offset",
        "toColumn": "ShiftOffsetID"
      },
      {
        "name": "31db9b52-206f-4f27-a7f8-3f80b7607492",
        "fromTable": "Cycle Time",
        "fromColumn": "ReasonID",
        "toTable": "Missed Cycle Reason",
        "toColumn": "ReasonID"
      },
      {
        "name": "c0d1d610-6d69-459f-9f1c-0912cbdc4c8a",
        "fromTable": "Shift Hours",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "a2cf4198-c990-4e51-8200-4ae20adf9964",
        "fromTable": "Shift Hours",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "03221996-ebdb-4786-9897-2c8e1c48bcb3",
        "fromTable": "Shift Hours",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "b510f18f-7f75-49be-a637-ad241d289685",
        "fromTable": "Production",
        "fromColumn": "CurrentShiftID",
        "toTable": "Shift Control",
        "toColumn": "CurrentShiftID"
      },
      {
        "name": "ff5f2898-2ddb-4348-8a27-0584eacfe179",
        "fromTable": "Cycle Time",
        "fromColumn": "CurrentShiftID",
        "toTable": "Shift Control",
        "toColumn": "CurrentShiftID"
      },
      {
        "name": "91bc56b5-e9bf-4343-92ff-a907c5ec057c",
        "fromTable": "Scrap",
        "fromColumn": "CurrentShiftID",
        "toTable": "Shift Control",
        "toColumn": "CurrentShiftID"
      },
      {
        "name": "56afb87c-ac61-4296-9c6d-97382d8e0792",
        "fromTable": "Goal",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "2c3f2a81-c27f-4071-aed3-d55985cc9e42",
        "fromTable": "Shift Hours",
        "fromColumn": "ShiftOffsetID",
        "toTable": "Shift Offset",
        "toColumn": "ShiftOffsetID"
      },
      {
        "name": "fba013f9-23b3-404f-b141-f35f6d4aa526",
        "fromTable": "Weekly Goal",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "8b3f68dd-583c-4446-88c2-bec15d080be1",
        "fromTable": "Weekly Goal",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "be66569c-e8f2-4726-9b70-a020891d9696",
        "fromTable": "Weekly Goal",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "c0e90e2e-407c-4cbd-99f4-09c29fa3a61f",
        "fromTable": "Shift Hours",
        "fromColumn": "CurrentShiftID",
        "toTable": "Shift Control",
        "toColumn": "CurrentShiftID"
      },
      {
        "name": "cc483493-8075-40f3-89eb-a2daf514c0f7",
        "fromTable": "DOR",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "fc895223-c664-4f65-a52b-0afdcb433014",
        "fromTable": "DOR",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "079f1f80-c4b7-430f-8b0f-90d364c9a570",
        "fromTable": "DOR",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "f6da9625-8fc9-48a2-853f-ae7e415de787",
        "fromTable": "Overhead",
        "fromColumn": "Account Combo",
        "toTable": "Account",
        "toColumn": "Account Combo"
      },
      {
        "name": "4d17582c-2b10-45a7-97bf-0060da53abeb",
        "fromTable": "Overhead",
        "fromColumn": "Location ID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "d92813a9-ca32-4c45-a76a-c62c60a12853",
        "fromTable": "Overhead",
        "fromColumn": "Date ID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "b67cb9ee-d323-4cf9-a76a-77880b9346db",
        "fromTable": "Labor",
        "fromColumn": "EmployeeID",
        "toTable": "Employee",
        "toColumn": "EmployeeID"
      },
      {
        "name": "16f61833-1505-4409-858f-bbe1877ae79a",
        "fromTable": "Labor",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "4184ea6b-51f2-4b32-9b8f-f0009363f072",
        "fromTable": "Labor",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "84340f48-f605-4ea7-9acc-8cf36ccbd495",
        "fromTable": "Labor",
        "fromColumn": "PaycodeID",
        "toTable": "Paycode",
        "toColumn": "PayCodeID"
      },
      {
        "name": "337a8c5d-f330-466a-b948-6dd7c93ba073",
        "fromTable": "Headcount",
        "fromColumn": "EmployeeID",
        "toTable": "Employee",
        "toColumn": "EmployeeID"
      },
      {
        "name": "36390145-d64c-4424-9a34-208ccb81c18e",
        "fromTable": "Headcount",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "0858f6b0-7a1e-45eb-a08a-342e61709055",
        "fromTable": "Headcount",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "f17b6958-508d-4dbd-801a-7b293f2fe724",
        "fromTable": "Headcount",
        "fromColumn": "HeadcountTypeID",
        "toTable": "Headcount Type",
        "toColumn": "HeadcountTypeID"
      },
      {
        "name": "fec406ba-e555-49ec-bd0a-89706a3836b9",
        "fromTable": "Labor",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "650fd49c-033a-424e-ad6e-9b64e68c6ebe",
        "fromTable": "Standards",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "471ed3fa-981d-4894-b5a9-d683d97a14d5",
        "fromTable": "Labor",
        "fromColumn": "DepartmentID",
        "toTable": "Department",
        "toColumn": "DepartmentID"
      },
      {
        "name": "05e9669a-ec52-47ab-8bf2-8f3a674476b9",
        "fromTable": "Labor",
        "fromColumn": "LaborCategoryID",
        "toTable": "Labor Category",
        "toColumn": "LaborCategoryID"
      },
      {
        "name": "ed01b5aa-62f9-4652-8677-dbc5cc83d0d0",
        "fromTable": "Plan",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "1bf1b866-bdb1-42f3-9fa4-4767f981fd1e",
        "fromTable": "Plan",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "cad7128a-1fe0-4eab-9bfe-939522b1da03",
        "fromTable": "Plan",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "6275911e-a649-49e2-a21b-5dab979bac44",
        "fromTable": "Resin QA",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "45d2d92f-3808-4f1d-8a99-82dffd80aeae",
        "fromTable": "Resin QA",
        "fromColumn": "HourID",
        "toTable": "Hour",
        "toColumn": "Hour ID"
      },
      {
        "name": "9b598a28-00e9-498c-8535-767d78a1de5f",
        "fromTable": "Resin QA",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "e3d91e89-f5c0-4c63-86c4-45645fbedf5f",
        "fromTable": "Resin QA",
        "fromColumn": "ComponentID",
        "toTable": "Component",
        "toColumn": "ComponentID"
      },
      {
        "name": "0a7e90f2-1ca9-4857-a3d4-66af6737154f",
        "fromTable": "Resin QA",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "3f3cc93a-d28b-443f-ada3-f1bfeaf464d1",
        "fromTable": "Resin QA",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "65987f86-bdef-469b-8f54-33ae25bce840",
        "fromTable": "Resin QA",
        "fromColumn": "UserID",
        "toTable": "Employee",
        "toColumn": "Employee ID"
      },
      {
        "name": "fd53c9b7-bc73-403f-9d10-15bdecf2d0ed",
        "fromTable": "Resin QA",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "9ac74574-bd91-4044-b879-b94065709bf1",
        "fromTable": "Checklist QA",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "c60cb6a2-9d49-49be-b874-4f40731d0477",
        "fromTable": "Checklist QA",
        "fromColumn": "MachineID",
        "toTable": "Machine",
        "toColumn": "Machine ID"
      },
      {
        "name": "495ec426-40d9-4172-a1b2-8f24d5a84dd8",
        "fromTable": "Checklist QA",
        "fromColumn": "ProductID",
        "toTable": "Product",
        "toColumn": "ProductID"
      },
      {
        "name": "eb82b033-8ae5-410d-ab41-403c7a15edb9",
        "fromTable": "Checklist QA",
        "fromColumn": "DateID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Date ID"
      },
      {
        "name": "de0f2499-8657-4f7c-92c9-ca789a638671",
        "fromTable": "Headcount Target",
        "fromColumn": "DepartmentID",
        "toTable": "Department",
        "toColumn": "DepartmentID"
      },
      {
        "name": "8ddef011-fa15-4ed7-9268-8651c71f760f",
        "fromTable": "Headcount Target",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "7d7ddd77-f972-41a7-8701-c2fd0044af28",
        "fromTable": "Headcount Target",
        "fromColumn": "PlantID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "91ad0f5f-a245-4fe5-a57d-b55623e7c267",
        "fromTable": "Headcount",
        "fromColumn": "DepartmentID",
        "toTable": "Department",
        "toColumn": "DepartmentID"
      },
      {
        "name": "ea03682a-9052-44ff-942c-7508e14da3d7",
        "fromTable": "Headcount",
        "fromColumn": "ShiftID",
        "toTable": "Shift",
        "toColumn": "Shift ID"
      },
      {
        "name": "4b4908d8-7670-48c0-8416-c5b1ad2a1cdd",
        "toCardinality": "many",
        "fromTable": "Budget",
        "fromColumn": "WeekID",
        "toTable": "Fiscal Calendar",
        "toColumn": "Week ID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "3f762e35-da50-4103-bc17-ee6612b30e88",
        "fromTable": "Budget",
        "fromColumn": "LocationID",
        "toTable": "Location",
        "toColumn": "Location ID"
      },
      {
        "name": "310add8c-d50b-4f1e-a801-ff24ccd3243b",
        "toCardinality": "many",
        "fromTable": "Standards",
        "fromColumn": "Machine",
        "toTable": "Machine",
        "toColumn": "Machine Size",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "roles": [
      {
        "name": "Read",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "STEP2\\Domain Users",
            "memberId": "S-1-5-21-209193057-2653316314-1365489721-513"
          }
        ],
        "tablePermissions": [
          {
            "name": "Employee",
            "columnPermissions": [
              {
                "name": "Employee Full Name",
                "metadataPermission": "none"
              },
              {
                "name": "Employee ID",
                "metadataPermission": "none"
              },
              {
                "name": "EmployeeID",
                "metadataPermission": "none"
              },
              {
                "name": "Date Terminated",
                "metadataPermission": "none"
              },
              {
                "name": "Hire Date",
                "metadataPermission": "none"
              }
            ]
          },
          {
            "name": "Labor",
            "columnPermissions": [
              {
                "name": "$Wages"
              }
            ]
          }
        ]
      },
      {
        "name": "Full",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "STEP2\\derek_a",
            "memberId": "S-1-5-21-209193057-2653316314-1365489721-7487"
          },
          {
            "memberName": "STEP2\\stephen_n",
            "memberId": "S-1-5-21-209193057-2653316314-1365489721-7461"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}